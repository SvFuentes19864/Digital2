

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Wed Jul 19 18:57:02 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.40
    26                           ; Generated 17/11/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372  0000                     	;# 
   373  0001                     	;# 
   374  0002                     	;# 
   375  0003                     	;# 
   376  0004                     	;# 
   377  0005                     	;# 
   378  0006                     	;# 
   379  0007                     	;# 
   380  0008                     	;# 
   381  0009                     	;# 
   382  000A                     	;# 
   383  000B                     	;# 
   384  000C                     	;# 
   385  000D                     	;# 
   386  000E                     	;# 
   387  000E                     	;# 
   388  000F                     	;# 
   389  0010                     	;# 
   390  0011                     	;# 
   391  0012                     	;# 
   392  0013                     	;# 
   393  0014                     	;# 
   394  0015                     	;# 
   395  0015                     	;# 
   396  0016                     	;# 
   397  0017                     	;# 
   398  0018                     	;# 
   399  0019                     	;# 
   400  001A                     	;# 
   401  001B                     	;# 
   402  001B                     	;# 
   403  001C                     	;# 
   404  001D                     	;# 
   405  001E                     	;# 
   406  001F                     	;# 
   407  0081                     	;# 
   408  0085                     	;# 
   409  0086                     	;# 
   410  0087                     	;# 
   411  0088                     	;# 
   412  0089                     	;# 
   413  008C                     	;# 
   414  008D                     	;# 
   415  008E                     	;# 
   416  008F                     	;# 
   417  0090                     	;# 
   418  0091                     	;# 
   419  0092                     	;# 
   420  0093                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0094                     	;# 
   424  0095                     	;# 
   425  0096                     	;# 
   426  0097                     	;# 
   427  0098                     	;# 
   428  0099                     	;# 
   429  009A                     	;# 
   430  009B                     	;# 
   431  009C                     	;# 
   432  009D                     	;# 
   433  009E                     	;# 
   434  009F                     	;# 
   435  0105                     	;# 
   436  0107                     	;# 
   437  0108                     	;# 
   438  0109                     	;# 
   439  010C                     	;# 
   440  010C                     	;# 
   441  010D                     	;# 
   442  010E                     	;# 
   443  010F                     	;# 
   444  0185                     	;# 
   445  0187                     	;# 
   446  0188                     	;# 
   447  0189                     	;# 
   448  018C                     	;# 
   449  018D                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  000D                     	;# 
   464  000E                     	;# 
   465  000E                     	;# 
   466  000F                     	;# 
   467  0010                     	;# 
   468  0011                     	;# 
   469  0012                     	;# 
   470  0013                     	;# 
   471  0014                     	;# 
   472  0015                     	;# 
   473  0015                     	;# 
   474  0016                     	;# 
   475  0017                     	;# 
   476  0018                     	;# 
   477  0019                     	;# 
   478  001A                     	;# 
   479  001B                     	;# 
   480  001B                     	;# 
   481  001C                     	;# 
   482  001D                     	;# 
   483  001E                     	;# 
   484  001F                     	;# 
   485  0081                     	;# 
   486  0085                     	;# 
   487  0086                     	;# 
   488  0087                     	;# 
   489  0088                     	;# 
   490  0089                     	;# 
   491  008C                     	;# 
   492  008D                     	;# 
   493  008E                     	;# 
   494  008F                     	;# 
   495  0090                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0094                     	;# 
   502  0095                     	;# 
   503  0096                     	;# 
   504  0097                     	;# 
   505  0098                     	;# 
   506  0099                     	;# 
   507  009A                     	;# 
   508  009B                     	;# 
   509  009C                     	;# 
   510  009D                     	;# 
   511  009E                     	;# 
   512  009F                     	;# 
   513  0105                     	;# 
   514  0107                     	;# 
   515  0108                     	;# 
   516  0109                     	;# 
   517  010C                     	;# 
   518  010C                     	;# 
   519  010D                     	;# 
   520  010E                     	;# 
   521  010F                     	;# 
   522  0185                     	;# 
   523  0187                     	;# 
   524  0188                     	;# 
   525  0189                     	;# 
   526  018C                     	;# 
   527  018D                     	;# 
   528  0000                     	;# 
   529  0001                     	;# 
   530  0002                     	;# 
   531  0003                     	;# 
   532  0004                     	;# 
   533  0005                     	;# 
   534  0006                     	;# 
   535  0007                     	;# 
   536  0008                     	;# 
   537  0009                     	;# 
   538  000A                     	;# 
   539  000B                     	;# 
   540  000C                     	;# 
   541  000D                     	;# 
   542  000E                     	;# 
   543  000E                     	;# 
   544  000F                     	;# 
   545  0010                     	;# 
   546  0011                     	;# 
   547  0012                     	;# 
   548  0013                     	;# 
   549  0014                     	;# 
   550  0015                     	;# 
   551  0015                     	;# 
   552  0016                     	;# 
   553  0017                     	;# 
   554  0018                     	;# 
   555  0019                     	;# 
   556  001A                     	;# 
   557  001B                     	;# 
   558  001B                     	;# 
   559  001C                     	;# 
   560  001D                     	;# 
   561  001E                     	;# 
   562  001F                     	;# 
   563  0081                     	;# 
   564  0085                     	;# 
   565  0086                     	;# 
   566  0087                     	;# 
   567  0088                     	;# 
   568  0089                     	;# 
   569  008C                     	;# 
   570  008D                     	;# 
   571  008E                     	;# 
   572  008F                     	;# 
   573  0090                     	;# 
   574  0091                     	;# 
   575  0092                     	;# 
   576  0093                     	;# 
   577  0093                     	;# 
   578  0093                     	;# 
   579  0094                     	;# 
   580  0095                     	;# 
   581  0096                     	;# 
   582  0097                     	;# 
   583  0098                     	;# 
   584  0099                     	;# 
   585  009A                     	;# 
   586  009B                     	;# 
   587  009C                     	;# 
   588  009D                     	;# 
   589  009E                     	;# 
   590  009F                     	;# 
   591  0105                     	;# 
   592  0107                     	;# 
   593  0108                     	;# 
   594  0109                     	;# 
   595  010C                     	;# 
   596  010C                     	;# 
   597  010D                     	;# 
   598  010E                     	;# 
   599  010F                     	;# 
   600  0185                     	;# 
   601  0187                     	;# 
   602  0188                     	;# 
   603  0189                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606                           
   607                           	psect	strings
   608  0291                     __pstrings:
   609  0291                     stringtab:
   610  0291                     __stringtab:
   611  0291                     stringcode:	
   612                           ;	String table - string pointers are 1 byte each
   613                           
   614  0291                     stringdir:
   615  0291  3002               	movlw	high stringdir
   616  0292  008A               	movwf	10
   617  0293  0804               	movf	4,w
   618  0294  0A84               	incf	4,f
   619  0295  0782               	addwf	2,f
   620  0296                     __stringbase:
   621  0296  3400               	retlw	0
   622  0297                     __end_of__stringtab:
   623  0297                     _tabla:
   624  0297  34BF               	retlw	191
   625  0298  3486               	retlw	134
   626  0299  34DB               	retlw	219
   627  029A  34CF               	retlw	207
   628  029B  34E6               	retlw	230
   629  029C  34ED               	retlw	237
   630  029D  34FD               	retlw	253
   631  029E  3487               	retlw	135
   632  029F  34FF               	retlw	255
   633  02A0  34EF               	retlw	239
   634  02A1  34F7               	retlw	247
   635  02A2  34FC               	retlw	252
   636  02A3  34B9               	retlw	185
   637  02A4  34DE               	retlw	222
   638  02A5  34F9               	retlw	249
   639  02A6  34F1               	retlw	241
   640  02A7                     __end_of_tabla:
   641  0009                     _PORTE	set	9
   642  0006                     _PORTB	set	6
   643  0001                     _TMR0	set	1
   644  0008                     _PORTD	set	8
   645  0009                     _PORTEbits	set	9
   646  0007                     _PORTC	set	7
   647  0006                     _PORTBbits	set	6
   648  000B                     _INTCONbits	set	11
   649  001E                     _ADRESH	set	30
   650  001F                     _ADCON0bits	set	31
   651  0081                     _OPTION_REGbits	set	129
   652  0089                     _TRISE	set	137
   653  0088                     _TRISD	set	136
   654  0086                     _TRISB	set	134
   655  0087                     _TRISC	set	135
   656  008F                     _OSCCONbits	set	143
   657  0095                     _WPUBbits	set	149
   658  0096                     _IOCBbits	set	150
   659  009F                     _ADCON1bits	set	159
   660  0085                     _TRISAbits	set	133
   661  0188                     _ANSEL	set	392
   662  0189                     _ANSELH	set	393
   663  0188                     _ANSELbits	set	392
   664                           
   665                           	psect	cinit
   666  0013                     start_initialization:	
   667                           ; #config settings
   668                           
   669  0013                     __initialization:
   670                           
   671                           ; Clear objects allocated to COMMON
   672  0013  01F7               	clrf	__pbssCOMMON& (0+127)
   673  0014  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   674                           
   675                           ; Clear objects allocated to BANK0
   676  0015  1283               	bcf	3,5	;RP0=0, select bank0
   677  0016  1303               	bcf	3,6	;RP1=0, select bank0
   678  0017  01A8               	clrf	__pbssBANK0& (0+127)
   679  0018  01A9               	clrf	(__pbssBANK0+1)& (0+127)
   680  0019  01AA               	clrf	(__pbssBANK0+2)& (0+127)
   681  001A  01AB               	clrf	(__pbssBANK0+3)& (0+127)
   682  001B  01AC               	clrf	(__pbssBANK0+4)& (0+127)
   683  001C                     end_of_initialization:	
   684                           ;End of C runtime variable initialization code
   685                           
   686  001C                     __end_of__initialization:
   687  001C  0183               	clrf	3
   688  001D  120A  118A  29F6   	ljmp	_main	;jump to C main() function
   689                           
   690                           	psect	bssCOMMON
   691  0077                     __pbssCOMMON:
   692  0077                     _display:
   693  0077                     	ds	2
   694                           
   695                           	psect	bssBANK0
   696  0028                     __pbssBANK0:
   697  0028                     _DEC:
   698  0028                     	ds	1
   699  0029                     _UNI:
   700  0029                     	ds	1
   701  002A                     _valor_adc:
   702  002A                     	ds	1
   703  002B                     _nibbleBajo:
   704  002B                     	ds	1
   705  002C                     _nibbleAlto:
   706  002C                     	ds	1
   707                           
   708                           	psect	cstackCOMMON
   709  0070                     __pcstackCOMMON:
   710  0070                     ?_setup:
   711  0070                     ?_t0_init:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?_ioc_init:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_isr:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ??_isr:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_main:	
   724                           ; 1 bytes @ 0x0
   725                           
   726                           
   727                           ; 1 bytes @ 0x0
   728  0070                     	ds	7
   729                           
   730                           	psect	cstackBANK0
   731  0020                     __pcstackBANK0:
   732  0020                     ?_separar_nibbles:
   733  0020                     ??_t0_init:	
   734                           ; 1 bytes @ 0x0
   735                           
   736  0020                     ?_reinicio_tmr0:	
   737                           ; 1 bytes @ 0x0
   738                           
   739  0020                     ?_adc_init:	
   740                           ; 1 bytes @ 0x0
   741                           
   742  0020                     ??_ioc_init:	
   743                           ; 1 bytes @ 0x0
   744                           
   745  0020                     ?_configOsc:	
   746                           ; 1 bytes @ 0x0
   747                           
   748  0020                     ?_adc_read:	
   749                           ; 1 bytes @ 0x0
   750                           
   751  0020                     separar_nibbles@nibbleAlto:	
   752                           ; 2 bytes @ 0x0
   753                           
   754  0020                     adc_init@channel:	
   755                           ; 1 bytes @ 0x0
   756                           
   757  0020                     configOsc@frec:	
   758                           ; 2 bytes @ 0x0
   759                           
   760  0020                     reinicio_tmr0@val_tm0:	
   761                           ; 2 bytes @ 0x0
   762                           
   763                           
   764                           ; 2 bytes @ 0x0
   765  0020                     	ds	1
   766  0021                     separar_nibbles@nibbleBajo:
   767                           
   768                           ; 1 bytes @ 0x1
   769  0021                     	ds	1
   770  0022                     ??_separar_nibbles:
   771  0022                     ??_reinicio_tmr0:	
   772                           ; 1 bytes @ 0x2
   773                           
   774  0022                     ??_adc_init:	
   775                           ; 1 bytes @ 0x2
   776                           
   777  0022                     ??_adc_read:	
   778                           ; 1 bytes @ 0x2
   779                           
   780  0022                     ??_configOsc:	
   781                           ; 1 bytes @ 0x2
   782                           
   783  0022                     ioc_init@pin:	
   784                           ; 1 bytes @ 0x2
   785                           
   786  0022                     t0_init@prescaler:	
   787                           ; 1 bytes @ 0x2
   788                           
   789                           
   790                           ; 1 bytes @ 0x2
   791  0022                     	ds	1
   792  0023                     ??_setup:
   793                           
   794                           ; 1 bytes @ 0x3
   795  0023                     	ds	1
   796  0024                     separar_nibbles@byte:
   797                           
   798                           ; 1 bytes @ 0x4
   799  0024                     	ds	1
   800  0025                     ??_main:
   801                           
   802                           ; 1 bytes @ 0x5
   803  0025                     	ds	3
   804                           
   805                           	psect	maintext
   806  01F6                     __pmaintext:	
   807 ;;
   808 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   809 ;;
   810 ;; *************** function _main *****************
   811 ;; Defined at:
   812 ;;		line 135 in file "Postlab01.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;		None
   815 ;; Auto vars:     Size  Location     Type
   816 ;;		None
   817 ;; Return value:  Size  Location     Type
   818 ;;                  1    wreg      void 
   819 ;; Registers used:
   820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   821 ;; Tracked objects:
   822 ;;		On entry : B00/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       0       0       0       0
   827 ;;      Locals:         0       0       0       0       0
   828 ;;      Temps:          0       3       0       0       0
   829 ;;      Totals:         0       3       0       0       0
   830 ;;Total ram usage:        3 bytes
   831 ;; Hardware stack levels required when called: 4
   832 ;; This function calls:
   833 ;;		_adc_read
   834 ;;		_separar_nibbles
   835 ;;		_setup
   836 ;; This function is called by:
   837 ;;		Startup code after reset
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           
   841  01F6                     _main:	
   842                           ;psect for function _main
   843                           
   844  01F6                     l1358:	
   845                           ;incstack = 0
   846                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   847                           
   848                           
   849                           ;Postlab01.c: 137:     setup();
   850  01F6  120A  118A  2150  120A  118A  	fcall	_setup
   851  01FB                     l1360:
   852                           
   853                           ;Postlab01.c: 141:         valor_adc = adc_read();
   854  01FB  120A  118A  225C  120A  118A  	fcall	_adc_read
   855  0200  1283               	bcf	3,5	;RP0=0, select bank0
   856  0201  1303               	bcf	3,6	;RP1=0, select bank0
   857  0202  0820               	movf	?_adc_read,w
   858  0203  00A5               	movwf	??_main
   859  0204  0825               	movf	??_main,w
   860  0205  00AA               	movwf	_valor_adc
   861  0206                     l1362:
   862                           
   863                           ;Postlab01.c: 143:         separar_nibbles (valor_adc, &nibbleAlto, &nibbleBajo);
   864  0206  302C               	movlw	(low (_nibbleAlto| 0))& (0+255)
   865  0207  00A5               	movwf	??_main
   866  0208  0825               	movf	??_main,w
   867  0209  00A0               	movwf	separar_nibbles@nibbleAlto
   868  020A  302B               	movlw	(low (_nibbleBajo| 0))& (0+255)
   869  020B  00A6               	movwf	??_main+1
   870  020C  0826               	movf	??_main+1,w
   871  020D  00A1               	movwf	separar_nibbles@nibbleBajo
   872  020E  082A               	movf	_valor_adc,w
   873  020F  120A  118A  2277  120A  118A  	fcall	_separar_nibbles
   874  0214                     l1364:
   875                           
   876                           ;Postlab01.c: 145:         UNI = nibbleAlto;
   877  0214  1283               	bcf	3,5	;RP0=0, select bank0
   878  0215  1303               	bcf	3,6	;RP1=0, select bank0
   879  0216  082C               	movf	_nibbleAlto,w
   880  0217  00A5               	movwf	??_main
   881  0218  0825               	movf	??_main,w
   882  0219  00A9               	movwf	_UNI
   883  021A                     l1366:
   884                           
   885                           ;Postlab01.c: 146:         DEC = nibbleBajo;
   886  021A  082B               	movf	_nibbleBajo,w
   887  021B  00A5               	movwf	??_main
   888  021C  0825               	movf	??_main,w
   889  021D  00A8               	movwf	_DEC
   890  021E                     l1368:
   891                           
   892                           ;Postlab01.c: 148:         if(valor_adc == PORTC){
   893  021E  082A               	movf	_valor_adc,w
   894  021F  0607               	xorwf	7,w	;volatile
   895  0220  1D03               	skipz
   896  0221  2A23               	goto	u371
   897  0222  2A24               	goto	u370
   898  0223                     u371:
   899  0223  2A34               	goto	l160
   900  0224                     u370:
   901  0224                     l1370:
   902                           
   903                           ;Postlab01.c: 150:             PORTBbits.RB2 = 1;
   904  0224  1506               	bsf	6,2	;volatile
   905  0225                     l1372:
   906                           
   907                           ;Postlab01.c: 151:             _delay((unsigned long)((500)*(4000000/4000.0)));
   908  0225  3003               	movlw	3
   909  0226  1283               	bcf	3,5	;RP0=0, select bank0
   910  0227  1303               	bcf	3,6	;RP1=0, select bank0
   911  0228  00A7               	movwf	??_main+2
   912  0229  308A               	movlw	138
   913  022A  00A6               	movwf	??_main+1
   914  022B  3055               	movlw	85
   915  022C  00A5               	movwf	??_main
   916  022D                     u387:
   917  022D  0BA5               	decfsz	??_main,f
   918  022E  2A2D               	goto	u387
   919  022F  0BA6               	decfsz	??_main+1,f
   920  0230  2A2D               	goto	u387
   921  0231  0BA7               	decfsz	??_main+2,f
   922  0232  2A2D               	goto	u387
   923                           
   924                           ;Postlab01.c: 153:         }
   925  0233  29FB               	goto	l1360
   926  0234                     l160:	
   927                           ;Postlab01.c: 155:         else {
   928                           
   929                           
   930                           ;Postlab01.c: 157:             PORTBbits.RB2 = 0;
   931  0234  1106               	bcf	6,2	;volatile
   932  0235  29FB               	goto	l1360
   933  0236  120A  118A  2810   	ljmp	start
   934  0239                     __end_of_main:
   935                           
   936                           	psect	text1
   937  0150                     __ptext1:	
   938 ;; *************** function _setup *****************
   939 ;; Defined at:
   940 ;;		line 168 in file "Postlab01.c"
   941 ;; Parameters:    Size  Location     Type
   942 ;;		None
   943 ;; Auto vars:     Size  Location     Type
   944 ;;		None
   945 ;; Return value:  Size  Location     Type
   946 ;;                  1    wreg      void 
   947 ;; Registers used:
   948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   949 ;; Tracked objects:
   950 ;;		On entry : 0/0
   951 ;;		On exit  : 0/0
   952 ;;		Unchanged: 0/0
   953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   954 ;;      Params:         0       0       0       0       0
   955 ;;      Locals:         0       0       0       0       0
   956 ;;      Temps:          0       0       0       0       0
   957 ;;      Totals:         0       0       0       0       0
   958 ;;Total ram usage:        0 bytes
   959 ;; Hardware stack levels used: 1
   960 ;; Hardware stack levels required when called: 3
   961 ;; This function calls:
   962 ;;		_adc_init
   963 ;;		_configOsc
   964 ;;		_ioc_init
   965 ;;		_reinicio_tmr0
   966 ;;		_t0_init
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972  0150                     _setup:	
   973                           ;psect for function _setup
   974                           
   975  0150                     l1316:	
   976                           ;incstack = 0
   977                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   978                           
   979                           
   980                           ;Postlab01.c: 170:     configOsc(4);
   981  0150  3004               	movlw	4
   982  0151  1283               	bcf	3,5	;RP0=0, select bank0
   983  0152  1303               	bcf	3,6	;RP1=0, select bank0
   984  0153  00A0               	movwf	configOsc@frec
   985  0154  3000               	movlw	0
   986  0155  00A1               	movwf	configOsc@frec+1
   987  0156  120A  118A  20F8  120A  118A  	fcall	_configOsc
   988  015B                     l1318:
   989                           
   990                           ;Postlab01.c: 174:     ANSELH = 0;
   991  015B  1683               	bsf	3,5	;RP0=1, select bank3
   992  015C  1703               	bsf	3,6	;RP1=1, select bank3
   993  015D  0189               	clrf	9	;volatile
   994  015E                     l1320:
   995                           
   996                           ;Postlab01.c: 175:     ANSEL = 0;
   997  015E  0188               	clrf	8	;volatile
   998  015F                     l1322:
   999                           
  1000                           ;Postlab01.c: 177:     TRISC = 0;
  1001  015F  1683               	bsf	3,5	;RP0=1, select bank1
  1002  0160  1303               	bcf	3,6	;RP1=0, select bank1
  1003  0161  0187               	clrf	7	;volatile
  1004  0162                     l1324:
  1005                           
  1006                           ;Postlab01.c: 178:     PORTC = 0;
  1007  0162  1283               	bcf	3,5	;RP0=0, select bank0
  1008  0163  1303               	bcf	3,6	;RP1=0, select bank0
  1009  0164  0187               	clrf	7	;volatile
  1010  0165                     l1326:
  1011                           
  1012                           ;Postlab01.c: 179:     TRISB = 0b00000011;
  1013  0165  3003               	movlw	3
  1014  0166  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0167  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0168  0086               	movwf	6	;volatile
  1017  0169                     l1328:
  1018                           
  1019                           ;Postlab01.c: 180:     PORTB = 0;
  1020  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1021  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1022  016B  0186               	clrf	6	;volatile
  1023  016C                     l1330:
  1024                           
  1025                           ;Postlab01.c: 181:     TRISD = 0;
  1026  016C  1683               	bsf	3,5	;RP0=1, select bank1
  1027  016D  1303               	bcf	3,6	;RP1=0, select bank1
  1028  016E  0188               	clrf	8	;volatile
  1029  016F                     l1332:
  1030                           
  1031                           ;Postlab01.c: 182:     PORTD = 0;
  1032  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1033  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1034  0171  0188               	clrf	8	;volatile
  1035  0172                     l1334:
  1036                           
  1037                           ;Postlab01.c: 183:     TRISE = 0;
  1038  0172  1683               	bsf	3,5	;RP0=1, select bank1
  1039  0173  1303               	bcf	3,6	;RP1=0, select bank1
  1040  0174  0189               	clrf	9	;volatile
  1041  0175                     l1336:
  1042                           
  1043                           ;Postlab01.c: 184:     PORTE = 0;
  1044  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1045  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1046  0177  0189               	clrf	9	;volatile
  1047  0178                     l1338:
  1048                           
  1049                           ;Postlab01.c: 188:     OPTION_REGbits.nRBPU = 0;
  1050  0178  1683               	bsf	3,5	;RP0=1, select bank1
  1051  0179  1303               	bcf	3,6	;RP1=0, select bank1
  1052  017A  1381               	bcf	1,7	;volatile
  1053  017B                     l1340:
  1054                           
  1055                           ;Postlab01.c: 190:     ioc_init(0);
  1056  017B  3000               	movlw	0
  1057  017C  120A  118A  21A7  120A  118A  	fcall	_ioc_init
  1058  0181                     l1342:
  1059                           
  1060                           ;Postlab01.c: 191:     ioc_init(1);
  1061  0181  3001               	movlw	1
  1062  0182  120A  118A  21A7  120A  118A  	fcall	_ioc_init
  1063  0187                     l1344:
  1064                           
  1065                           ;Postlab01.c: 196:     INTCONbits.GIE = 1;
  1066  0187  178B               	bsf	11,7	;volatile
  1067  0188                     l1346:
  1068                           
  1069                           ;Postlab01.c: 197:     INTCONbits.RBIE = 1;
  1070  0188  158B               	bsf	11,3	;volatile
  1071  0189                     l1348:
  1072                           
  1073                           ;Postlab01.c: 198:     INTCONbits.T0IE = 1;
  1074  0189  168B               	bsf	11,5	;volatile
  1075  018A                     l1350:
  1076                           
  1077                           ;Postlab01.c: 199:     INTCONbits.T0IF = 0;
  1078  018A  110B               	bcf	11,2	;volatile
  1079  018B                     l1352:
  1080                           
  1081                           ;Postlab01.c: 203:     t0_init(128);
  1082  018B  3080               	movlw	128
  1083  018C  120A  118A  2092  120A  118A  	fcall	_t0_init
  1084  0191                     l1354:
  1085                           
  1086                           ;Postlab01.c: 204:     reinicio_tmr0(178);
  1087  0191  30B2               	movlw	178
  1088  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1089  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1090  0194  00A0               	movwf	reinicio_tmr0@val_tm0
  1091  0195  3000               	movlw	0
  1092  0196  00A1               	movwf	reinicio_tmr0@val_tm0+1
  1093  0197  120A  118A  22A7  120A  118A  	fcall	_reinicio_tmr0
  1094  019C                     l1356:
  1095                           
  1096                           ;Postlab01.c: 208:     adc_init(0);
  1097  019C  3000               	movlw	0
  1098  019D  1283               	bcf	3,5	;RP0=0, select bank0
  1099  019E  1303               	bcf	3,6	;RP1=0, select bank0
  1100  019F  00A0               	movwf	adc_init@channel
  1101  01A0  00A1               	movwf	adc_init@channel+1
  1102  01A1  120A  118A  2239  120A  118A  	fcall	_adc_init
  1103  01A6                     l167:
  1104  01A6  0008               	return
  1105  01A7                     __end_of_setup:
  1106                           
  1107                           	psect	text2
  1108  0092                     __ptext2:	
  1109 ;; *************** function _t0_init *****************
  1110 ;; Defined at:
  1111 ;;		line 3 in file "Config_tm0.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;  prescaler       1    wreg     unsigned char 
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;  prescaler       1    2[BANK0 ] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       1       0       0       0
  1127 ;;      Temps:          0       2       0       0       0
  1128 ;;      Totals:         0       3       0       0       0
  1129 ;;Total ram usage:        3 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 2
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_setup
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139  0092                     _t0_init:	
  1140                           ;psect for function _t0_init
  1141                           
  1142                           
  1143                           ;incstack = 0
  1144                           ; Regs used in _t0_init: [wreg-fsr0h+status,2+status,0]
  1145                           ;t0_init@prescaler stored from wreg
  1146  0092  1283               	bcf	3,5	;RP0=0, select bank0
  1147  0093  1303               	bcf	3,6	;RP1=0, select bank0
  1148  0094  00A2               	movwf	t0_init@prescaler
  1149  0095                     l1092:
  1150                           
  1151                           ;Config_tm0.c: 5:     OPTION_REGbits.T0CS = 0;
  1152  0095  1683               	bsf	3,5	;RP0=1, select bank1
  1153  0096  1303               	bcf	3,6	;RP1=0, select bank1
  1154  0097  1281               	bcf	1,5	;volatile
  1155                           
  1156                           ;Config_tm0.c: 6:     OPTION_REGbits.PSA = 0;
  1157  0098  1181               	bcf	1,3	;volatile
  1158                           
  1159                           ;Config_tm0.c: 8:     switch(prescaler){
  1160  0099  28CE               	goto	l1112
  1161  009A                     l1094:
  1162                           
  1163                           ;Config_tm0.c: 12:             OPTION_REGbits.PS = 0b000;
  1164  009A  30F8               	movlw	-8
  1165  009B  1683               	bsf	3,5	;RP0=1, select bank1
  1166  009C  1303               	bcf	3,6	;RP1=0, select bank1
  1167  009D  0581               	andwf	1,f	;volatile
  1168                           
  1169                           ;Config_tm0.c: 14:             break;
  1170  009E  28F7               	goto	l184
  1171  009F                     l1096:
  1172                           
  1173                           ;Config_tm0.c: 18:             OPTION_REGbits.PS = 0b001;
  1174  009F  1683               	bsf	3,5	;RP0=1, select bank1
  1175  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  1176  00A1  0801               	movf	1,w	;volatile
  1177  00A2  39F8               	andlw	-8
  1178  00A3  3801               	iorlw	1
  1179  00A4  0081               	movwf	1	;volatile
  1180                           
  1181                           ;Config_tm0.c: 20:             break;
  1182  00A5  28F7               	goto	l184
  1183  00A6                     l1098:
  1184                           
  1185                           ;Config_tm0.c: 24:             OPTION_REGbits.PS = 0b010;
  1186  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1187  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1188  00A8  0801               	movf	1,w	;volatile
  1189  00A9  39F8               	andlw	-8
  1190  00AA  3802               	iorlw	2
  1191  00AB  0081               	movwf	1	;volatile
  1192                           
  1193                           ;Config_tm0.c: 26:             break;
  1194  00AC  28F7               	goto	l184
  1195  00AD                     l1100:
  1196                           
  1197                           ;Config_tm0.c: 30:             OPTION_REGbits.PS = 0b011;
  1198  00AD  1683               	bsf	3,5	;RP0=1, select bank1
  1199  00AE  1303               	bcf	3,6	;RP1=0, select bank1
  1200  00AF  0801               	movf	1,w	;volatile
  1201  00B0  39F8               	andlw	-8
  1202  00B1  3803               	iorlw	3
  1203  00B2  0081               	movwf	1	;volatile
  1204                           
  1205                           ;Config_tm0.c: 32:             break;
  1206  00B3  28F7               	goto	l184
  1207  00B4                     l1102:
  1208                           
  1209                           ;Config_tm0.c: 36:             OPTION_REGbits.PS = 0b100;
  1210  00B4  1683               	bsf	3,5	;RP0=1, select bank1
  1211  00B5  1303               	bcf	3,6	;RP1=0, select bank1
  1212  00B6  0801               	movf	1,w	;volatile
  1213  00B7  39F8               	andlw	-8
  1214  00B8  3804               	iorlw	4
  1215  00B9  0081               	movwf	1	;volatile
  1216                           
  1217                           ;Config_tm0.c: 38:             break;
  1218  00BA  28F7               	goto	l184
  1219  00BB                     l1104:
  1220                           
  1221                           ;Config_tm0.c: 42:             OPTION_REGbits.PS = 0b101;
  1222  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1223  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1224  00BD  0801               	movf	1,w	;volatile
  1225  00BE  39F8               	andlw	-8
  1226  00BF  3805               	iorlw	5
  1227  00C0  0081               	movwf	1	;volatile
  1228                           
  1229                           ;Config_tm0.c: 44:             break;
  1230  00C1  28F7               	goto	l184
  1231  00C2                     l1106:
  1232                           
  1233                           ;Config_tm0.c: 48:             OPTION_REGbits.PS = 0b110;
  1234  00C2  1683               	bsf	3,5	;RP0=1, select bank1
  1235  00C3  1303               	bcf	3,6	;RP1=0, select bank1
  1236  00C4  0801               	movf	1,w	;volatile
  1237  00C5  39F8               	andlw	-8
  1238  00C6  3806               	iorlw	6
  1239  00C7  0081               	movwf	1	;volatile
  1240                           
  1241                           ;Config_tm0.c: 50:             break;
  1242  00C8  28F7               	goto	l184
  1243  00C9                     l1108:
  1244                           
  1245                           ;Config_tm0.c: 54:             OPTION_REGbits.PS = 0b111;
  1246  00C9  3007               	movlw	7
  1247  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1248  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1249  00CC  0481               	iorwf	1,f	;volatile
  1250                           
  1251                           ;Config_tm0.c: 56:             break;
  1252  00CD  28F7               	goto	l184
  1253  00CE                     l1112:
  1254  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1255  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1256  00D0  0822               	movf	t0_init@prescaler,w
  1257  00D1  00A0               	movwf	??_t0_init
  1258  00D2  01A1               	clrf	??_t0_init+1
  1259                           
  1260                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  1261                           ; Switch size 1, requested type "simple"
  1262                           ; Number of cases is 2, Range of values is 0 to 1
  1263                           ; switch strategies available:
  1264                           ; Name         Instructions Cycles
  1265                           ; simple_byte            7     4 (average)
  1266                           ; direct_byte           14     8 (fixed)
  1267                           ; jumptable            260     6 (fixed)
  1268                           ;	Chosen strategy is simple_byte
  1269  00D3  0821               	movf	??_t0_init+1,w
  1270  00D4  3A00               	xorlw	0	; case 0
  1271  00D5  1903               	skipnz
  1272  00D6  28DB               	goto	l1444
  1273  00D7  3A01               	xorlw	1	; case 1
  1274  00D8  1903               	skipnz
  1275  00D9  28F2               	goto	l1446
  1276  00DA  28F7               	goto	l184
  1277  00DB                     l1444:
  1278                           
  1279                           ; Switch size 1, requested type "simple"
  1280                           ; Number of cases is 7, Range of values is 2 to 128
  1281                           ; switch strategies available:
  1282                           ; Name         Instructions Cycles
  1283                           ; simple_byte           22    12 (average)
  1284                           ; jumptable            263     9 (fixed)
  1285                           ;	Chosen strategy is simple_byte
  1286  00DB  0820               	movf	??_t0_init,w
  1287  00DC  3A02               	xorlw	2	; case 2
  1288  00DD  1903               	skipnz
  1289  00DE  289A               	goto	l1094
  1290  00DF  3A06               	xorlw	6	; case 4
  1291  00E0  1903               	skipnz
  1292  00E1  289F               	goto	l1096
  1293  00E2  3A0C               	xorlw	12	; case 8
  1294  00E3  1903               	skipnz
  1295  00E4  28A6               	goto	l1098
  1296  00E5  3A18               	xorlw	24	; case 16
  1297  00E6  1903               	skipnz
  1298  00E7  28AD               	goto	l1100
  1299  00E8  3A30               	xorlw	48	; case 32
  1300  00E9  1903               	skipnz
  1301  00EA  28B4               	goto	l1102
  1302  00EB  3A60               	xorlw	96	; case 64
  1303  00EC  1903               	skipnz
  1304  00ED  28BB               	goto	l1104
  1305  00EE  3AC0               	xorlw	192	; case 128
  1306  00EF  1903               	skipnz
  1307  00F0  28C2               	goto	l1106
  1308  00F1  28F7               	goto	l184
  1309  00F2                     l1446:
  1310                           
  1311                           ; Switch size 1, requested type "simple"
  1312                           ; Number of cases is 1, Range of values is 0 to 0
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte            4     3 (average)
  1316                           ; direct_byte           11     8 (fixed)
  1317                           ; jumptable            260     6 (fixed)
  1318                           ;	Chosen strategy is simple_byte
  1319  00F2  0820               	movf	??_t0_init,w
  1320  00F3  3A00               	xorlw	0	; case 0
  1321  00F4  1903               	skipnz
  1322  00F5  28C9               	goto	l1108
  1323  00F6  28F7               	goto	l184
  1324  00F7                     l184:
  1325  00F7  0008               	return
  1326  00F8                     __end_of_t0_init:
  1327                           
  1328                           	psect	text3
  1329  02A7                     __ptext3:	
  1330 ;; *************** function _reinicio_tmr0 *****************
  1331 ;; Defined at:
  1332 ;;		line 62 in file "Config_tm0.c"
  1333 ;; Parameters:    Size  Location     Type
  1334 ;;  val_tm0         2    0[BANK0 ] int 
  1335 ;; Auto vars:     Size  Location     Type
  1336 ;;		None
  1337 ;; Return value:  Size  Location     Type
  1338 ;;                  1    wreg      void 
  1339 ;; Registers used:
  1340 ;;		wreg
  1341 ;; Tracked objects:
  1342 ;;		On entry : 0/0
  1343 ;;		On exit  : 0/0
  1344 ;;		Unchanged: 0/0
  1345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1346 ;;      Params:         0       2       0       0       0
  1347 ;;      Locals:         0       0       0       0       0
  1348 ;;      Temps:          0       0       0       0       0
  1349 ;;      Totals:         0       2       0       0       0
  1350 ;;Total ram usage:        2 bytes
  1351 ;; Hardware stack levels used: 1
  1352 ;; Hardware stack levels required when called: 2
  1353 ;; This function calls:
  1354 ;;		Nothing
  1355 ;; This function is called by:
  1356 ;;		_setup
  1357 ;; This function uses a non-reentrant model
  1358 ;;
  1359                           
  1360  02A7                     _reinicio_tmr0:	
  1361                           ;psect for function _reinicio_tmr0
  1362                           
  1363  02A7                     l1314:	
  1364                           ;incstack = 0
  1365                           ; Regs used in _reinicio_tmr0: [wreg]
  1366                           
  1367                           
  1368                           ;Config_tm0.c: 64:     TMR0 = val_tm0;
  1369  02A7  1283               	bcf	3,5	;RP0=0, select bank0
  1370  02A8  1303               	bcf	3,6	;RP1=0, select bank0
  1371  02A9  0820               	movf	reinicio_tmr0@val_tm0,w
  1372  02AA  0081               	movwf	1	;volatile
  1373  02AB                     l187:
  1374  02AB  0008               	return
  1375  02AC                     __end_of_reinicio_tmr0:
  1376                           
  1377                           	psect	text4
  1378  01A7                     __ptext4:	
  1379 ;; *************** function _ioc_init *****************
  1380 ;; Defined at:
  1381 ;;		line 3 in file "Config_botones.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  pin             1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  pin             1    2[BANK0 ] unsigned char 
  1386 ;; Return value:  Size  Location     Type
  1387 ;;                  1    wreg      void 
  1388 ;; Registers used:
  1389 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1390 ;; Tracked objects:
  1391 ;;		On entry : 0/0
  1392 ;;		On exit  : 0/0
  1393 ;;		Unchanged: 0/0
  1394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1395 ;;      Params:         0       0       0       0       0
  1396 ;;      Locals:         0       1       0       0       0
  1397 ;;      Temps:          0       2       0       0       0
  1398 ;;      Totals:         0       3       0       0       0
  1399 ;;Total ram usage:        3 bytes
  1400 ;; Hardware stack levels used: 1
  1401 ;; Hardware stack levels required when called: 2
  1402 ;; This function calls:
  1403 ;;		Nothing
  1404 ;; This function is called by:
  1405 ;;		_setup
  1406 ;; This function uses a non-reentrant model
  1407 ;;
  1408                           
  1409  01A7                     _ioc_init:	
  1410                           ;psect for function _ioc_init
  1411                           
  1412                           
  1413                           ;incstack = 0
  1414                           ; Regs used in _ioc_init: [wreg-fsr0h+status,2+status,0]
  1415                           ;ioc_init@pin stored from wreg
  1416  01A7  1283               	bcf	3,5	;RP0=0, select bank0
  1417  01A8  1303               	bcf	3,6	;RP1=0, select bank0
  1418  01A9  00A2               	movwf	ioc_init@pin
  1419  01AA                     l1064:
  1420                           
  1421                           ;Config_botones.c: 5:     switch(pin){
  1422  01AA  29D3               	goto	l1068
  1423  01AB                     l47:	
  1424                           ;Config_botones.c: 7:         case 0:
  1425                           
  1426                           
  1427                           ;Config_botones.c: 9:             IOCBbits.IOCB0 = 1;
  1428  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1429  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1430  01AD  1416               	bsf	22,0	;volatile
  1431                           
  1432                           ;Config_botones.c: 10:             WPUBbits.WPUB0 = 1;
  1433  01AE  1415               	bsf	21,0	;volatile
  1434                           
  1435                           ;Config_botones.c: 12:             break;
  1436  01AF  29F5               	goto	l56
  1437  01B0                     l49:	
  1438                           ;Config_botones.c: 14:         case 1:
  1439                           
  1440                           
  1441                           ;Config_botones.c: 16:             IOCBbits.IOCB1 = 1;
  1442  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  1443  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  1444  01B2  1496               	bsf	22,1	;volatile
  1445                           
  1446                           ;Config_botones.c: 17:             WPUBbits.WPUB1 = 1;
  1447  01B3  1495               	bsf	21,1	;volatile
  1448                           
  1449                           ;Config_botones.c: 19:             break;
  1450  01B4  29F5               	goto	l56
  1451  01B5                     l50:	
  1452                           ;Config_botones.c: 21:         case 2:
  1453                           
  1454                           
  1455                           ;Config_botones.c: 23:             IOCBbits.IOCB2 = 1;
  1456  01B5  1683               	bsf	3,5	;RP0=1, select bank1
  1457  01B6  1303               	bcf	3,6	;RP1=0, select bank1
  1458  01B7  1516               	bsf	22,2	;volatile
  1459                           
  1460                           ;Config_botones.c: 24:             WPUBbits.WPUB2 = 1;
  1461  01B8  1515               	bsf	21,2	;volatile
  1462                           
  1463                           ;Config_botones.c: 26:             break;
  1464  01B9  29F5               	goto	l56
  1465  01BA                     l51:	
  1466                           ;Config_botones.c: 28:         case 3:
  1467                           
  1468                           
  1469                           ;Config_botones.c: 30:             IOCBbits.IOCB3 = 1;
  1470  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  1471  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  1472  01BC  1596               	bsf	22,3	;volatile
  1473                           
  1474                           ;Config_botones.c: 31:             WPUBbits.WPUB3 = 1;
  1475  01BD  1595               	bsf	21,3	;volatile
  1476                           
  1477                           ;Config_botones.c: 33:             break;
  1478  01BE  29F5               	goto	l56
  1479  01BF                     l52:	
  1480                           ;Config_botones.c: 35:         case 4:
  1481                           
  1482                           
  1483                           ;Config_botones.c: 37:             IOCBbits.IOCB0 = 4;
  1484  01BF  1683               	bsf	3,5	;RP0=1, select bank1
  1485  01C0  1303               	bcf	3,6	;RP1=0, select bank1
  1486  01C1  1016               	bcf	22,0	;volatile
  1487                           
  1488                           ;Config_botones.c: 38:             WPUBbits.WPUB0 = 4;
  1489  01C2  1015               	bcf	21,0	;volatile
  1490                           
  1491                           ;Config_botones.c: 40:             break;
  1492  01C3  29F5               	goto	l56
  1493  01C4                     l53:	
  1494                           ;Config_botones.c: 42:         case 5:
  1495                           
  1496                           
  1497                           ;Config_botones.c: 44:             IOCBbits.IOCB5 = 1;
  1498  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  1499  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  1500  01C6  1696               	bsf	22,5	;volatile
  1501                           
  1502                           ;Config_botones.c: 45:             WPUBbits.WPUB5 = 1;
  1503  01C7  1695               	bsf	21,5	;volatile
  1504                           
  1505                           ;Config_botones.c: 47:             break;
  1506  01C8  29F5               	goto	l56
  1507  01C9                     l54:	
  1508                           ;Config_botones.c: 49:         case 6:
  1509                           
  1510                           
  1511                           ;Config_botones.c: 51:             IOCBbits.IOCB6 = 1;
  1512  01C9  1683               	bsf	3,5	;RP0=1, select bank1
  1513  01CA  1303               	bcf	3,6	;RP1=0, select bank1
  1514  01CB  1716               	bsf	22,6	;volatile
  1515                           
  1516                           ;Config_botones.c: 52:             WPUBbits.WPUB6 = 1;
  1517  01CC  1715               	bsf	21,6	;volatile
  1518                           
  1519                           ;Config_botones.c: 54:             break;
  1520  01CD  29F5               	goto	l56
  1521  01CE                     l55:	
  1522                           ;Config_botones.c: 56:         case 7:
  1523                           
  1524                           
  1525                           ;Config_botones.c: 58:             IOCBbits.IOCB7 = 1;
  1526  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  1527  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  1528  01D0  1796               	bsf	22,7	;volatile
  1529                           
  1530                           ;Config_botones.c: 59:             WPUBbits.WPUB7 = 1;
  1531  01D1  1795               	bsf	21,7	;volatile
  1532                           
  1533                           ;Config_botones.c: 61:             break;
  1534  01D2  29F5               	goto	l56
  1535  01D3                     l1068:
  1536  01D3  0822               	movf	ioc_init@pin,w
  1537  01D4  00A0               	movwf	??_ioc_init
  1538  01D5  01A1               	clrf	??_ioc_init+1
  1539                           
  1540                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1541                           ; Switch size 1, requested type "simple"
  1542                           ; Number of cases is 1, Range of values is 0 to 0
  1543                           ; switch strategies available:
  1544                           ; Name         Instructions Cycles
  1545                           ; simple_byte            4     3 (average)
  1546                           ; direct_byte           11     8 (fixed)
  1547                           ; jumptable            260     6 (fixed)
  1548                           ;	Chosen strategy is simple_byte
  1549  01D6  0821               	movf	??_ioc_init+1,w
  1550  01D7  3A00               	xorlw	0	; case 0
  1551  01D8  1903               	skipnz
  1552  01D9  29DB               	goto	l1448
  1553  01DA  29F5               	goto	l56
  1554  01DB                     l1448:
  1555                           
  1556                           ; Switch size 1, requested type "simple"
  1557                           ; Number of cases is 8, Range of values is 0 to 7
  1558                           ; switch strategies available:
  1559                           ; Name         Instructions Cycles
  1560                           ; simple_byte           25    13 (average)
  1561                           ; direct_byte           32     8 (fixed)
  1562                           ; jumptable            260     6 (fixed)
  1563                           ;	Chosen strategy is simple_byte
  1564  01DB  0820               	movf	??_ioc_init,w
  1565  01DC  3A00               	xorlw	0	; case 0
  1566  01DD  1903               	skipnz
  1567  01DE  29AB               	goto	l47
  1568  01DF  3A01               	xorlw	1	; case 1
  1569  01E0  1903               	skipnz
  1570  01E1  29B0               	goto	l49
  1571  01E2  3A03               	xorlw	3	; case 2
  1572  01E3  1903               	skipnz
  1573  01E4  29B5               	goto	l50
  1574  01E5  3A01               	xorlw	1	; case 3
  1575  01E6  1903               	skipnz
  1576  01E7  29BA               	goto	l51
  1577  01E8  3A07               	xorlw	7	; case 4
  1578  01E9  1903               	skipnz
  1579  01EA  29BF               	goto	l52
  1580  01EB  3A01               	xorlw	1	; case 5
  1581  01EC  1903               	skipnz
  1582  01ED  29C4               	goto	l53
  1583  01EE  3A03               	xorlw	3	; case 6
  1584  01EF  1903               	skipnz
  1585  01F0  29C9               	goto	l54
  1586  01F1  3A01               	xorlw	1	; case 7
  1587  01F2  1903               	skipnz
  1588  01F3  29CE               	goto	l55
  1589  01F4  29F5               	goto	l56
  1590  01F5                     l56:
  1591  01F5  0008               	return
  1592  01F6                     __end_of_ioc_init:
  1593                           
  1594                           	psect	text5
  1595  00F8                     __ptext5:	
  1596 ;; *************** function _configOsc *****************
  1597 ;; Defined at:
  1598 ;;		line 3 in file "Oscilador.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  frec            2    0[BANK0 ] unsigned int 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;		None
  1603 ;; Return value:  Size  Location     Type
  1604 ;;                  1    wreg      void 
  1605 ;; Registers used:
  1606 ;;		wreg, status,2, status,0
  1607 ;; Tracked objects:
  1608 ;;		On entry : 0/0
  1609 ;;		On exit  : 0/0
  1610 ;;		Unchanged: 0/0
  1611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1612 ;;      Params:         0       2       0       0       0
  1613 ;;      Locals:         0       0       0       0       0
  1614 ;;      Temps:          0       0       0       0       0
  1615 ;;      Totals:         0       2       0       0       0
  1616 ;;Total ram usage:        2 bytes
  1617 ;; Hardware stack levels used: 1
  1618 ;; Hardware stack levels required when called: 2
  1619 ;; This function calls:
  1620 ;;		Nothing
  1621 ;; This function is called by:
  1622 ;;		_setup
  1623 ;; This function uses a non-reentrant model
  1624 ;;
  1625                           
  1626  00F8                     _configOsc:	
  1627                           ;psect for function _configOsc
  1628                           
  1629  00F8                     l1298:	
  1630                           ;incstack = 0
  1631                           ; Regs used in _configOsc: [wreg+status,2+status,0]
  1632                           
  1633                           
  1634                           ;Oscilador.c: 5:     if(frec == 8){
  1635  00F8  3008               	movlw	8
  1636  00F9  1283               	bcf	3,5	;RP0=0, select bank0
  1637  00FA  1303               	bcf	3,6	;RP1=0, select bank0
  1638  00FB  0620               	xorwf	configOsc@frec,w
  1639  00FC  0421               	iorwf	configOsc@frec+1,w
  1640  00FD  1D03               	btfss	3,2
  1641  00FE  2900               	goto	u311
  1642  00FF  2901               	goto	u310
  1643  0100                     u311:
  1644  0100  2905               	goto	l74
  1645  0101                     u310:
  1646  0101                     l1300:
  1647                           
  1648                           ;Oscilador.c: 7:         OSCCONbits.IRCF = 0b111;
  1649  0101  3070               	movlw	112
  1650  0102  1683               	bsf	3,5	;RP0=1, select bank1
  1651  0103  1303               	bcf	3,6	;RP1=0, select bank1
  1652  0104  048F               	iorwf	15,f	;volatile
  1653  0105                     l74:	
  1654                           ;Oscilador.c: 9:     }
  1655                           
  1656                           
  1657                           ;Oscilador.c: 11:     if(frec == 4){
  1658  0105  3004               	movlw	4
  1659  0106  1283               	bcf	3,5	;RP0=0, select bank0
  1660  0107  0620               	xorwf	configOsc@frec,w
  1661  0108  0421               	iorwf	configOsc@frec+1,w
  1662  0109  1D03               	btfss	3,2
  1663  010A  290C               	goto	u321
  1664  010B  290D               	goto	u320
  1665  010C                     u321:
  1666  010C  2913               	goto	l75
  1667  010D                     u320:
  1668  010D                     l1302:
  1669                           
  1670                           ;Oscilador.c: 13:         OSCCONbits.IRCF = 0b110;
  1671  010D  1683               	bsf	3,5	;RP0=1, select bank1
  1672  010E  1303               	bcf	3,6	;RP1=0, select bank1
  1673  010F  080F               	movf	15,w	;volatile
  1674  0110  398F               	andlw	-113
  1675  0111  3860               	iorlw	96
  1676  0112  008F               	movwf	15	;volatile
  1677  0113                     l75:	
  1678                           ;Oscilador.c: 15:     }
  1679                           
  1680                           
  1681                           ;Oscilador.c: 17:     if(frec == 1){
  1682  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0114  0320               	decf	configOsc@frec,w
  1684  0115  0421               	iorwf	configOsc@frec+1,w
  1685  0116  1D03               	btfss	3,2
  1686  0117  2919               	goto	u331
  1687  0118  291A               	goto	u330
  1688  0119                     u331:
  1689  0119  2920               	goto	l76
  1690  011A                     u330:
  1691  011A                     l1304:
  1692                           
  1693                           ;Oscilador.c: 19:         OSCCONbits.IRCF = 0b100;
  1694  011A  1683               	bsf	3,5	;RP0=1, select bank1
  1695  011B  1303               	bcf	3,6	;RP1=0, select bank1
  1696  011C  080F               	movf	15,w	;volatile
  1697  011D  398F               	andlw	-113
  1698  011E  3840               	iorlw	64
  1699  011F  008F               	movwf	15	;volatile
  1700  0120                     l76:	
  1701                           ;Oscilador.c: 21:     }
  1702                           
  1703                           
  1704                           ;Oscilador.c: 23:     if(frec == 500){
  1705  0120  30F4               	movlw	244
  1706  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1707  0122  0620               	xorwf	configOsc@frec,w
  1708  0123  1D03               	skipz
  1709  0124  2929               	goto	u341
  1710  0125  0321               	decf	configOsc@frec+1,w
  1711  0126  1D03               	btfss	3,2
  1712  0127  2929               	goto	u341
  1713  0128  292A               	goto	u340
  1714  0129                     u341:
  1715  0129  2930               	goto	l77
  1716  012A                     u340:
  1717  012A                     l1306:
  1718                           
  1719                           ;Oscilador.c: 25:         OSCCONbits.IRCF = 0b011;
  1720  012A  1683               	bsf	3,5	;RP0=1, select bank1
  1721  012B  1303               	bcf	3,6	;RP1=0, select bank1
  1722  012C  080F               	movf	15,w	;volatile
  1723  012D  398F               	andlw	-113
  1724  012E  3830               	iorlw	48
  1725  012F  008F               	movwf	15	;volatile
  1726  0130                     l77:	
  1727                           ;Oscilador.c: 27:     }
  1728                           
  1729                           
  1730                           ;Oscilador.c: 29:     if(frec == 250){
  1731  0130  30FA               	movlw	250
  1732  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1733  0132  0620               	xorwf	configOsc@frec,w
  1734  0133  0421               	iorwf	configOsc@frec+1,w
  1735  0134  1D03               	btfss	3,2
  1736  0135  2937               	goto	u351
  1737  0136  2938               	goto	u350
  1738  0137                     u351:
  1739  0137  293E               	goto	l78
  1740  0138                     u350:
  1741  0138                     l1308:
  1742                           
  1743                           ;Oscilador.c: 31:         OSCCONbits.IRCF = 0b010;
  1744  0138  1683               	bsf	3,5	;RP0=1, select bank1
  1745  0139  1303               	bcf	3,6	;RP1=0, select bank1
  1746  013A  080F               	movf	15,w	;volatile
  1747  013B  398F               	andlw	-113
  1748  013C  3820               	iorlw	32
  1749  013D  008F               	movwf	15	;volatile
  1750  013E                     l78:	
  1751                           ;Oscilador.c: 33:     }
  1752                           
  1753                           
  1754                           ;Oscilador.c: 35:     if(frec == 125){
  1755  013E  307D               	movlw	125
  1756  013F  1283               	bcf	3,5	;RP0=0, select bank0
  1757  0140  0620               	xorwf	configOsc@frec,w
  1758  0141  0421               	iorwf	configOsc@frec+1,w
  1759  0142  1D03               	btfss	3,2
  1760  0143  2945               	goto	u361
  1761  0144  2946               	goto	u360
  1762  0145                     u361:
  1763  0145  294C               	goto	l1312
  1764  0146                     u360:
  1765  0146                     l1310:
  1766                           
  1767                           ;Oscilador.c: 37:         OSCCONbits.IRCF = 0b001;
  1768  0146  1683               	bsf	3,5	;RP0=1, select bank1
  1769  0147  1303               	bcf	3,6	;RP1=0, select bank1
  1770  0148  080F               	movf	15,w	;volatile
  1771  0149  398F               	andlw	-113
  1772  014A  3810               	iorlw	16
  1773  014B  008F               	movwf	15	;volatile
  1774  014C                     l1312:
  1775                           
  1776                           ;Oscilador.c: 41:     OSCCONbits.SCS = 1;
  1777  014C  1683               	bsf	3,5	;RP0=1, select bank1
  1778  014D  1303               	bcf	3,6	;RP1=0, select bank1
  1779  014E  140F               	bsf	15,0	;volatile
  1780  014F                     l80:
  1781  014F  0008               	return
  1782  0150                     __end_of_configOsc:
  1783                           
  1784                           	psect	text6
  1785  0239                     __ptext6:	
  1786 ;; *************** function _adc_init *****************
  1787 ;; Defined at:
  1788 ;;		line 3 in file "Config_ADC.c"
  1789 ;; Parameters:    Size  Location     Type
  1790 ;;  channel         2    0[BANK0 ] int 
  1791 ;; Auto vars:     Size  Location     Type
  1792 ;;		None
  1793 ;; Return value:  Size  Location     Type
  1794 ;;                  1    wreg      void 
  1795 ;; Registers used:
  1796 ;;		wreg, status,2, status,0
  1797 ;; Tracked objects:
  1798 ;;		On entry : 0/0
  1799 ;;		On exit  : 0/0
  1800 ;;		Unchanged: 0/0
  1801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1802 ;;      Params:         0       2       0       0       0
  1803 ;;      Locals:         0       0       0       0       0
  1804 ;;      Temps:          0       1       0       0       0
  1805 ;;      Totals:         0       3       0       0       0
  1806 ;;Total ram usage:        3 bytes
  1807 ;; Hardware stack levels used: 1
  1808 ;; Hardware stack levels required when called: 2
  1809 ;; This function calls:
  1810 ;;		Nothing
  1811 ;; This function is called by:
  1812 ;;		_setup
  1813 ;; This function uses a non-reentrant model
  1814 ;;
  1815                           
  1816  0239                     _adc_init:	
  1817                           ;psect for function _adc_init
  1818                           
  1819  0239                     l1056:	
  1820                           ;incstack = 0
  1821                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1822                           
  1823                           
  1824                           ;Config_ADC.c: 7:     TRISAbits.TRISA0 = 1;
  1825  0239  1683               	bsf	3,5	;RP0=1, select bank1
  1826  023A  1303               	bcf	3,6	;RP1=0, select bank1
  1827  023B  1405               	bsf	5,0	;volatile
  1828                           
  1829                           ;Config_ADC.c: 8:     ANSELbits.ANS0 = 1;
  1830  023C  1683               	bsf	3,5	;RP0=1, select bank3
  1831  023D  1703               	bsf	3,6	;RP1=1, select bank3
  1832  023E  1408               	bsf	8,0	;volatile
  1833                           
  1834                           ;Config_ADC.c: 12:     ADCON0bits.ADCS1 = 0;
  1835  023F  1283               	bcf	3,5	;RP0=0, select bank0
  1836  0240  1303               	bcf	3,6	;RP1=0, select bank0
  1837  0241  139F               	bcf	31,7	;volatile
  1838                           
  1839                           ;Config_ADC.c: 13:     ADCON0bits.ADCS0 = 1;
  1840  0242  171F               	bsf	31,6	;volatile
  1841                           
  1842                           ;Config_ADC.c: 15:     ADCON1bits.VCFG1 = 0;
  1843  0243  1683               	bsf	3,5	;RP0=1, select bank1
  1844  0244  1303               	bcf	3,6	;RP1=0, select bank1
  1845  0245  129F               	bcf	31,5	;volatile
  1846                           
  1847                           ;Config_ADC.c: 16:     ADCON1bits.VCFG0 = 0;
  1848  0246  121F               	bcf	31,4	;volatile
  1849                           
  1850                           ;Config_ADC.c: 18:     ADCON1bits.ADFM = 0;
  1851  0247  139F               	bcf	31,7	;volatile
  1852  0248                     l1058:
  1853                           
  1854                           ;Config_ADC.c: 20:     ADCON0bits.CHS = channel;
  1855  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1856  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1857  024A  0820               	movf	adc_init@channel,w
  1858  024B  00A2               	movwf	??_adc_init
  1859  024C  0DA2               	rlf	??_adc_init,f
  1860  024D  0DA2               	rlf	??_adc_init,f
  1861  024E  081F               	movf	31,w	;volatile
  1862  024F  0622               	xorwf	??_adc_init,w
  1863  0250  39C3               	andlw	-61
  1864  0251  0622               	xorwf	??_adc_init,w
  1865  0252  009F               	movwf	31	;volatile
  1866  0253                     l1060:
  1867                           
  1868                           ;Config_ADC.c: 22:     ADCON0bits.ADON = 1;
  1869  0253  141F               	bsf	31,0	;volatile
  1870  0254                     l1062:
  1871                           
  1872                           ;Config_ADC.c: 23:     _delay((unsigned long)((100)*(4000000/4000000.0)));
  1873  0254  3020               	movlw	32
  1874  0255  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0256  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0257  00A2               	movwf	??_adc_init
  1877  0258                     u397:
  1878  0258  0BA2               	decfsz	??_adc_init,f
  1879  0259  2A58               	goto	u397
  1880  025A  0000               	nop
  1881  025B                     l15:
  1882  025B  0008               	return
  1883  025C                     __end_of_adc_init:
  1884                           
  1885                           	psect	text7
  1886  0277                     __ptext7:	
  1887 ;; *************** function _separar_nibbles *****************
  1888 ;; Defined at:
  1889 ;;		line 3 in file "Separar_nibbles.c"
  1890 ;; Parameters:    Size  Location     Type
  1891 ;;  byte            1    wreg     unsigned char 
  1892 ;;  nibbleAlto      1    0[BANK0 ] PTR unsigned char 
  1893 ;;		 -> nibbleAlto(1), 
  1894 ;;  nibbleBajo      1    1[BANK0 ] PTR unsigned char 
  1895 ;;		 -> nibbleBajo(1), 
  1896 ;; Auto vars:     Size  Location     Type
  1897 ;;  byte            1    4[BANK0 ] unsigned char 
  1898 ;; Return value:  Size  Location     Type
  1899 ;;                  1    wreg      void 
  1900 ;; Registers used:
  1901 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1902 ;; Tracked objects:
  1903 ;;		On entry : 0/0
  1904 ;;		On exit  : 0/0
  1905 ;;		Unchanged: 0/0
  1906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1907 ;;      Params:         0       2       0       0       0
  1908 ;;      Locals:         0       1       0       0       0
  1909 ;;      Temps:          0       2       0       0       0
  1910 ;;      Totals:         0       5       0       0       0
  1911 ;;Total ram usage:        5 bytes
  1912 ;; Hardware stack levels used: 1
  1913 ;; Hardware stack levels required when called: 2
  1914 ;; This function calls:
  1915 ;;		Nothing
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921  0277                     _separar_nibbles:	
  1922                           ;psect for function _separar_nibbles
  1923                           
  1924                           
  1925                           ;incstack = 0
  1926                           ; Regs used in _separar_nibbles: [wreg-fsr0h+status,2+status,0]
  1927                           ;separar_nibbles@byte stored from wreg
  1928  0277  1283               	bcf	3,5	;RP0=0, select bank0
  1929  0278  1303               	bcf	3,6	;RP1=0, select bank0
  1930  0279  00A4               	movwf	separar_nibbles@byte
  1931  027A                     l1172:
  1932                           
  1933                           ;Separar_nibbles.c: 5:     *nibbleAlto = byte >> 4;
  1934  027A  0824               	movf	separar_nibbles@byte,w
  1935  027B  00A2               	movwf	??_separar_nibbles
  1936  027C  3004               	movlw	4
  1937  027D                     u235:
  1938  027D  1003               	clrc
  1939  027E  0CA2               	rrf	??_separar_nibbles,f
  1940  027F  3EFF               	addlw	-1
  1941  0280  1D03               	skipz
  1942  0281  2A7D               	goto	u235
  1943  0282  0822               	movf	??_separar_nibbles,w
  1944  0283  00A3               	movwf	??_separar_nibbles+1
  1945  0284  0820               	movf	separar_nibbles@nibbleAlto,w
  1946  0285  0084               	movwf	4
  1947  0286  0823               	movf	??_separar_nibbles+1,w
  1948  0287  1383               	bcf	3,7	;select IRP bank0
  1949  0288  0080               	movwf	0
  1950  0289                     l1174:
  1951                           
  1952                           ;Separar_nibbles.c: 6:     *nibbleBajo = byte & 0x0F;
  1953  0289  0824               	movf	separar_nibbles@byte,w
  1954  028A  390F               	andlw	15
  1955  028B  00A2               	movwf	??_separar_nibbles
  1956  028C  0821               	movf	separar_nibbles@nibbleBajo,w
  1957  028D  0084               	movwf	4
  1958  028E  0822               	movf	??_separar_nibbles,w
  1959  028F  0080               	movwf	0
  1960  0290                     l190:
  1961  0290  0008               	return
  1962  0291                     __end_of_separar_nibbles:
  1963                           
  1964                           	psect	text8
  1965  025C                     __ptext8:	
  1966 ;; *************** function _adc_read *****************
  1967 ;; Defined at:
  1968 ;;		line 27 in file "Config_ADC.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;		None
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;		None
  1973 ;; Return value:  Size  Location     Type
  1974 ;;                  2    0[BANK0 ] int 
  1975 ;; Registers used:
  1976 ;;		wreg
  1977 ;; Tracked objects:
  1978 ;;		On entry : 0/0
  1979 ;;		On exit  : 0/0
  1980 ;;		Unchanged: 0/0
  1981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1982 ;;      Params:         0       2       0       0       0
  1983 ;;      Locals:         0       0       0       0       0
  1984 ;;      Temps:          0       2       0       0       0
  1985 ;;      Totals:         0       4       0       0       0
  1986 ;;Total ram usage:        4 bytes
  1987 ;; Hardware stack levels used: 1
  1988 ;; Hardware stack levels required when called: 2
  1989 ;; This function calls:
  1990 ;;		Nothing
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996  025C                     _adc_read:	
  1997                           ;psect for function _adc_read
  1998                           
  1999  025C                     l1124:	
  2000                           ;incstack = 0
  2001                           ; Regs used in _adc_read: [wreg]
  2002                           
  2003                           
  2004                           ;Config_ADC.c: 30:         ADCON0bits.GO = 1;
  2005  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2006  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2007  025E  149F               	bsf	31,1	;volatile
  2008  025F                     l18:	
  2009                           ;Config_ADC.c: 31:         while(ADCON0bits.GO == 1);
  2010                           
  2011  025F  189F               	btfsc	31,1	;volatile
  2012  0260  2A62               	goto	u221
  2013  0261  2A63               	goto	u220
  2014  0262                     u221:
  2015  0262  2A5F               	goto	l18
  2016  0263                     u220:
  2017  0263                     l1126:
  2018                           
  2019                           ;Config_ADC.c: 32:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2020  0263  300D               	movlw	13
  2021  0264  1283               	bcf	3,5	;RP0=0, select bank0
  2022  0265  1303               	bcf	3,6	;RP1=0, select bank0
  2023  0266  00A3               	movwf	??_adc_read+1
  2024  0267  30FB               	movlw	251
  2025  0268  00A2               	movwf	??_adc_read
  2026  0269                     u407:
  2027  0269  0BA2               	decfsz	??_adc_read,f
  2028  026A  2A69               	goto	u407
  2029  026B  0BA3               	decfsz	??_adc_read+1,f
  2030  026C  2A69               	goto	u407
  2031                           
  2032                           ;Config_ADC.c: 33:         return ADRESH;
  2033  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2034  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2035  026F  081E               	movf	30,w	;volatile
  2036  0270  00A2               	movwf	??_adc_read
  2037  0271  01A3               	clrf	??_adc_read+1
  2038  0272  0822               	movf	??_adc_read,w
  2039  0273  00A0               	movwf	?_adc_read
  2040  0274  0823               	movf	??_adc_read+1,w
  2041  0275  00A1               	movwf	?_adc_read+1
  2042  0276                     l21:
  2043  0276  0008               	return
  2044  0277                     __end_of_adc_read:
  2045                           
  2046                           	psect	text9
  2047  0020                     __ptext9:	
  2048 ;; *************** function _isr *****************
  2049 ;; Defined at:
  2050 ;;		line 82 in file "Postlab01.c"
  2051 ;; Parameters:    Size  Location     Type
  2052 ;;		None
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;		None
  2055 ;; Return value:  Size  Location     Type
  2056 ;;                  1    wreg      void 
  2057 ;; Registers used:
  2058 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2059 ;; Tracked objects:
  2060 ;;		On entry : 0/0
  2061 ;;		On exit  : 0/0
  2062 ;;		Unchanged: 0/0
  2063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2064 ;;      Params:         0       0       0       0       0
  2065 ;;      Locals:         0       0       0       0       0
  2066 ;;      Temps:          7       0       0       0       0
  2067 ;;      Totals:         7       0       0       0       0
  2068 ;;Total ram usage:        7 bytes
  2069 ;; Hardware stack levels used: 2
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		Interrupt level 1
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077  0020                     _isr:	
  2078                           ;psect for function _isr
  2079                           
  2080  0020                     i1l1176:
  2081                           
  2082                           ;Postlab01.c: 84:     if(INTCONbits.RBIF){
  2083  0020  1C0B               	btfss	11,0	;volatile
  2084  0021  2823               	goto	u24_21
  2085  0022  2824               	goto	u24_20
  2086  0023                     u24_21:
  2087  0023  2851               	goto	i1l1190
  2088  0024                     u24_20:
  2089  0024                     i1l1178:
  2090                           
  2091                           ;Postlab01.c: 86:         INTCONbits.RBIF = 0;
  2092  0024  100B               	bcf	11,0	;volatile
  2093                           
  2094                           ;Postlab01.c: 87:         if (!PORTBbits.RB0){
  2095  0025  1283               	bcf	3,5	;RP0=0, select bank0
  2096  0026  1303               	bcf	3,6	;RP1=0, select bank0
  2097  0027  1806               	btfsc	6,0	;volatile
  2098  0028  282A               	goto	u25_21
  2099  0029  282B               	goto	u25_20
  2100  002A                     u25_21:
  2101  002A  283C               	goto	i1l1184
  2102  002B                     u25_20:
  2103  002B                     i1l1180:
  2104                           
  2105                           ;Postlab01.c: 89:             PORTC++;
  2106  002B  3001               	movlw	1
  2107  002C  00F0               	movwf	??_isr
  2108  002D  0870               	movf	??_isr,w
  2109  002E  0787               	addwf	7,f	;volatile
  2110  002F                     i1l1182:
  2111                           
  2112                           ;Postlab01.c: 90:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2113  002F  3003               	movlw	3
  2114  0030  00F2               	movwf	??_isr+2
  2115  0031  308A               	movlw	138
  2116  0032  00F1               	movwf	??_isr+1
  2117  0033  3055               	movlw	85
  2118  0034  00F0               	movwf	??_isr
  2119  0035                     u41_27:
  2120  0035  0BF0               	decfsz	??_isr,f
  2121  0036  2835               	goto	u41_27
  2122  0037  0BF1               	decfsz	??_isr+1,f
  2123  0038  2835               	goto	u41_27
  2124  0039  0BF2               	decfsz	??_isr+2,f
  2125  003A  2835               	goto	u41_27
  2126  003B  283C               	nop2
  2127  003C                     i1l1184:
  2128                           
  2129                           ;Postlab01.c: 94:         if (!PORTBbits.RB1){
  2130  003C  1283               	bcf	3,5	;RP0=0, select bank0
  2131  003D  1303               	bcf	3,6	;RP1=0, select bank0
  2132  003E  1886               	btfsc	6,1	;volatile
  2133  003F  2841               	goto	u26_21
  2134  0040  2842               	goto	u26_20
  2135  0041                     u26_21:
  2136  0041  2851               	goto	i1l1190
  2137  0042                     u26_20:
  2138  0042                     i1l1186:
  2139                           
  2140                           ;Postlab01.c: 96:             PORTC--;
  2141  0042  3001               	movlw	1
  2142  0043  0287               	subwf	7,f	;volatile
  2143  0044                     i1l1188:
  2144                           
  2145                           ;Postlab01.c: 97:             _delay((unsigned long)((500)*(4000000/4000.0)));
  2146  0044  3003               	movlw	3
  2147  0045  00F2               	movwf	??_isr+2
  2148  0046  308A               	movlw	138
  2149  0047  00F1               	movwf	??_isr+1
  2150  0048  3055               	movlw	85
  2151  0049  00F0               	movwf	??_isr
  2152  004A                     u42_27:
  2153  004A  0BF0               	decfsz	??_isr,f
  2154  004B  284A               	goto	u42_27
  2155  004C  0BF1               	decfsz	??_isr+1,f
  2156  004D  284A               	goto	u42_27
  2157  004E  0BF2               	decfsz	??_isr+2,f
  2158  004F  284A               	goto	u42_27
  2159  0050  2851               	nop2
  2160  0051                     i1l1190:
  2161                           
  2162                           ;Postlab01.c: 102:     if(INTCONbits.T0IF){
  2163  0051  1D0B               	btfss	11,2	;volatile
  2164  0052  2854               	goto	u27_21
  2165  0053  2855               	goto	u27_20
  2166  0054                     u27_21:
  2167  0054  2887               	goto	i1l154
  2168  0055                     u27_20:
  2169  0055                     i1l1192:
  2170                           
  2171                           ;Postlab01.c: 104:         if (display == 0){
  2172  0055  0877               	movf	_display,w
  2173  0056  0478               	iorwf	_display+1,w
  2174  0057  1D03               	btfss	3,2
  2175  0058  285A               	goto	u28_21
  2176  0059  285B               	goto	u28_20
  2177  005A                     u28_21:
  2178  005A  286D               	goto	i1l1200
  2179  005B                     u28_20:
  2180  005B                     i1l1194:
  2181                           
  2182                           ;Postlab01.c: 106:             PORTEbits.RE0 = 1;
  2183  005B  1283               	bcf	3,5	;RP0=0, select bank0
  2184  005C  1303               	bcf	3,6	;RP1=0, select bank0
  2185  005D  1409               	bsf	9,0	;volatile
  2186                           
  2187                           ;Postlab01.c: 107:             PORTEbits.RE1 = 0;
  2188  005E  1089               	bcf	9,1	;volatile
  2189  005F                     i1l1196:
  2190                           
  2191                           ;Postlab01.c: 109:             PORTD = tabla[UNI];
  2192  005F  0829               	movf	_UNI,w
  2193  0060  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  2194  0061  0084               	movwf	4
  2195  0062  120A  118A  2291  120A  118A  	fcall	stringdir
  2196  0067  0088               	movwf	8	;volatile
  2197  0068                     i1l1198:
  2198                           
  2199                           ;Postlab01.c: 111:             display = 1;
  2200  0068  3001               	movlw	1
  2201  0069  00F7               	movwf	_display
  2202  006A  3000               	movlw	0
  2203  006B  00F8               	movwf	_display+1
  2204                           
  2205                           ;Postlab01.c: 113:         }
  2206  006C  2882               	goto	i1l1208
  2207  006D                     i1l1200:
  2208  006D  0377               	decf	_display,w
  2209  006E  0478               	iorwf	_display+1,w
  2210  006F  1D03               	btfss	3,2
  2211  0070  2872               	goto	u29_21
  2212  0071  2873               	goto	u29_20
  2213  0072                     u29_21:
  2214  0072  2882               	goto	i1l1208
  2215  0073                     u29_20:
  2216  0073                     i1l1202:
  2217                           
  2218                           ;Postlab01.c: 117:            PORTEbits.RE0 = 0;
  2219  0073  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0074  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0075  1009               	bcf	9,0	;volatile
  2222                           
  2223                           ;Postlab01.c: 118:            PORTEbits.RE1 = 1;
  2224  0076  1489               	bsf	9,1	;volatile
  2225  0077                     i1l1204:
  2226                           
  2227                           ;Postlab01.c: 120:            PORTD = tabla[DEC];
  2228  0077  0828               	movf	_DEC,w
  2229  0078  3E01               	addlw	low ((_tabla-__stringbase)| (0+32768))
  2230  0079  0084               	movwf	4
  2231  007A  120A  118A  2291  120A  118A  	fcall	stringdir
  2232  007F  0088               	movwf	8	;volatile
  2233  0080                     i1l1206:
  2234                           
  2235                           ;Postlab01.c: 122:            display = 0;
  2236  0080  01F7               	clrf	_display
  2237  0081  01F8               	clrf	_display+1
  2238  0082                     i1l1208:
  2239                           
  2240                           ;Postlab01.c: 126:         INTCONbits.T0IF = 0;
  2241  0082  110B               	bcf	11,2	;volatile
  2242  0083                     i1l1210:
  2243                           
  2244                           ;Postlab01.c: 127:         TMR0 = 178;
  2245  0083  30B2               	movlw	178
  2246  0084  1283               	bcf	3,5	;RP0=0, select bank0
  2247  0085  1303               	bcf	3,6	;RP1=0, select bank0
  2248  0086  0081               	movwf	1	;volatile
  2249  0087                     i1l154:
  2250  0087  0876               	movf	??_isr+6,w
  2251  0088  00FF               	movwf	btemp+1
  2252  0089  0875               	movf	??_isr+5,w
  2253  008A  008A               	movwf	10
  2254  008B  0874               	movf	??_isr+4,w
  2255  008C  0084               	movwf	4
  2256  008D  0E73               	swapf	??_isr+3,w
  2257  008E  0083               	movwf	3
  2258  008F  0EFE               	swapf	btemp,f
  2259  0090  0E7E               	swapf	btemp,w
  2260  0091  0009               	retfie
  2261  0092                     __end_of_isr:
  2262  007E                     btemp	set	126	;btemp
  2263  007E                     wtemp0	set	126
  2264                           
  2265                           	psect	intentry
  2266  0004                     __pintentry:	
  2267                           ;incstack = 0
  2268                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath]
  2269                           
  2270  0004                     interrupt_function:
  2271  007E                     saved_w	set	btemp
  2272  0004  00FE               	movwf	btemp
  2273  0005  0E03               	swapf	3,w
  2274  0006  00F3               	movwf	??_isr+3
  2275  0007  0804               	movf	4,w
  2276  0008  00F4               	movwf	??_isr+4
  2277  0009  080A               	movf	10,w
  2278  000A  00F5               	movwf	??_isr+5
  2279  000B  087F               	movf	btemp+1,w
  2280  000C  00F6               	movwf	??_isr+6
  2281  000D  120A  118A  2820   	ljmp	_isr
  2282                           
  2283                           	psect	idloc
  2284                           
  2285                           ;Config register IDLOC0 @ 0x2000
  2286                           ;	unspecified, using default values
  2287  2000                     	org	8192
  2288  2000  3FFF               	dw	16383
  2289                           
  2290                           ;Config register IDLOC1 @ 0x2001
  2291                           ;	unspecified, using default values
  2292  2001                     	org	8193
  2293  2001  3FFF               	dw	16383
  2294                           
  2295                           ;Config register IDLOC2 @ 0x2002
  2296                           ;	unspecified, using default values
  2297  2002                     	org	8194
  2298  2002  3FFF               	dw	16383
  2299                           
  2300                           ;Config register IDLOC3 @ 0x2003
  2301                           ;	unspecified, using default values
  2302  2003                     	org	8195
  2303  2003  3FFF               	dw	16383
  2304                           
  2305                           	psect	config
  2306                           
  2307                           ;Config register CONFIG1 @ 0x2007
  2308                           ;	Oscillator Selection bits
  2309                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2310                           ;	Watchdog Timer Enable bit
  2311                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2312                           ;	Power-up Timer Enable bit
  2313                           ;	PWRTE = OFF, PWRT disabled
  2314                           ;	RE3/MCLR pin function select bit
  2315                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2316                           ;	Code Protection bit
  2317                           ;	CP = OFF, Program memory code protection is disabled
  2318                           ;	Data Code Protection bit
  2319                           ;	CPD = OFF, Data memory code protection is disabled
  2320                           ;	Brown Out Reset Selection bits
  2321                           ;	BOREN = OFF, BOR disabled
  2322                           ;	Internal External Switchover bit
  2323                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2324                           ;	Fail-Safe Clock Monitor Enabled bit
  2325                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2326                           ;	Low Voltage Programming Enable bit
  2327                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2328                           ;	In-Circuit Debugger Mode bit
  2329                           ;	DEBUG = 0x1, unprogrammed default
  2330  2007                     	org	8199
  2331  2007  20D4               	dw	8404
  2332                           
  2333                           ;Config register CONFIG2 @ 0x2008
  2334                           ;	Brown-out Reset Selection bit
  2335                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2336                           ;	Flash Program Memory Self Write Enable bits
  2337                           ;	WRT = OFF, Write protection off
  2338  2008                     	org	8200
  2339  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    16
    Data        0
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      8      13
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    separar_nibbles@nibbleBajo	PTR unsigned char  size(1) Largest target is 1
		 -> nibbleBajo(BANK0[1]), 

    separar_nibbles@nibbleAlto	PTR unsigned char  size(1) Largest target is 1
		 -> nibbleAlto(BANK0[1]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_separar_nibbles
    _setup->_adc_init
    _setup->_ioc_init
    _setup->_t0_init

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     779
                                              5 BANK0      3     3      0
                           _adc_read
                    _separar_nibbles
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     539
                           _adc_init
                          _configOsc
                           _ioc_init
                      _reinicio_tmr0
                            _t0_init
 ---------------------------------------------------------------------------------
 (2) _t0_init                                              3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _reinicio_tmr0                                        2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             3     3      0      22
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     276
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             3     1      2      98
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (1) _separar_nibbles                                      5     3      2     240
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             4     2      2       0
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  7     7      0       0
                                              0 COMMON     7     7      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_read
   _separar_nibbles
   _setup
     _adc_init
     _configOsc
     _ioc_init
     _reinicio_tmr0
     _t0_init

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      8       D       5       16.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Wed Jul 19 18:57:02 2023

                        pc 0002                         l21 0276                         l15 025B  
                       l18 025F                         l50 01B5                         l51 01BA  
                       l52 01BF                         l53 01C4                         l54 01C9  
                       l55 01CE                         l47 01AB                         l80 014F  
                       l56 01F5                         l49 01B0                         l74 0105  
                       l75 0113                         l76 0120                         l77 0130  
                       l78 013E                         fsr 0004                        l160 0234  
                      l190 0290                        l167 01A6                        l184 00F7  
                      l187 02AB                        _DEC 0028                        u220 0263  
                      u221 0262                        u310 0101                        u311 0100  
                      u320 010D                        u321 010C                        u330 011A  
                      u235 027D                        u331 0119                        u340 012A  
                      u341 0129                        u350 0138                        u407 0269  
                      u351 0137                        u360 0146                        u361 0145  
                      u370 0224                        u371 0223                        u387 022D  
                      u397 0258                        _UNI 0029                        _isr 0020  
                      fsr0 0004                        indf 0000                       l1100 00AD  
                     l1102 00B4                       l1104 00BB                       l1112 00CE  
                     l1106 00C2                       l1124 025C                       l1060 0253  
                     l1300 0101                       l1108 00C9                       l1126 0263  
                     l1062 0254                       l1310 0146                       l1302 010D  
                     l1056 0239                       l1312 014C                       l1304 011A  
                     l1064 01AA                       l1320 015E                       l1058 0248  
                     l1306 012A                       l1314 02A7                       l1330 016C  
                     l1322 015F                       l1172 027A                       l1308 0138  
                     l1068 01D3                       l1092 0095                       l1340 017B  
                     l1332 016F                       l1324 0162                       l1316 0150  
                     l1174 0289                       l1094 009A                       l1350 018A  
                     l1342 0181                       l1334 0172                       l1326 0165  
                     l1318 015B                       l1096 009F                       l1352 018B  
                     l1344 0187                       l1336 0175                       l1328 0169  
                     l1360 01FB                       l1098 00A6                       l1354 0191  
                     l1346 0188                       l1338 0178                       l1370 0224  
                     l1362 0206                       l1444 00DB                       l1356 019C  
                     l1348 0189                       l1372 0225                       l1364 0214  
                     l1446 00F2                       l1366 021A                       l1358 01F6  
                     l1448 01DB                       l1368 021E                       l1298 00F8  
                     ?_isr 0070                       _TMR0 0001                       _main 01F6  
                     btemp 007E                       start 0010           ?_separar_nibbles 0020  
         t0_init@prescaler 0022                      ??_isr 0070            __end_of_t0_init 00F8  
            configOsc@frec 0020                      ?_main 0070                      _ANSEL 0188  
                    i1l154 0087                      u24_20 0024                      u24_21 0023  
                    u25_20 002B                      u25_21 002A                      u41_27 0035  
                    u26_20 0042                      u26_21 0041                      u42_27 004A  
                    u27_20 0055                      u27_21 0054                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
                    u28_20 005B                      u28_21 005A                      u29_20 0073  
                    u29_21 0072                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _tabla 0297  
                    _setup 0150                      pclath 000A      __end_of_reinicio_tmr0 02AC  
                    status 0003                      wtemp0 007E                ioc_init@pin 0022  
          __initialization 0013               __end_of_main 0239                     ??_main 0025  
                   _ADRESH 001E                     ?_setup 0070                     _ANSELH 0189  
         __end_of_adc_init 025C           __end_of_adc_read 0277                     i1l1200 006D  
                   i1l1210 0083                     i1l1202 0073                     i1l1204 0077  
                   i1l1206 0080                     i1l1208 0082                     i1l1180 002B  
                   i1l1182 002F                     i1l1190 0051                     i1l1192 0055  
                   i1l1184 003C                     i1l1176 0020                     i1l1194 005B  
                   i1l1186 0042                     i1l1178 0024                     i1l1196 005F  
                   i1l1188 0044                     i1l1198 0068                  ??_t0_init 0020  
         __end_of_ioc_init 01F6        separar_nibbles@byte 0024                     saved_w 007E  
  __end_of__initialization 001C             __pcstackCOMMON 0070              __end_of_tabla 02A7  
            __end_of_setup 01A7             _OPTION_REGbits 0081                    ??_setup 0023  
               __pbssBANK0 0028                 __pmaintext 01F6                 __pintentry 0004  
                ?_adc_init 0020                  ?_adc_read 0020       reinicio_tmr0@val_tm0 0020  
               __stringtab 0291                  ?_ioc_init 0070                 _nibbleBajo 002B  
               _nibbleAlto 002C                    _t0_init 0092          __end_of_configOsc 0150  
                _ANSELbits 0188                 ??_adc_init 0022                 ??_adc_read 0022  
                  __ptext1 0150                    __ptext2 0092                    __ptext3 02A7  
                  __ptext4 01A7                    __ptext5 00F8                    __ptext6 0239  
                  __ptext7 0277                    __ptext8 025C                    __ptext9 0020  
separar_nibbles@nibbleBajo 0021  separar_nibbles@nibbleAlto 0020                    _display 0077  
     end_of_initialization 001C                 ??_ioc_init 0020                  _PORTBbits 0006  
                _PORTEbits 0009                  _TRISAbits 0085        start_initialization 0013  
        ??_separar_nibbles 0022                __end_of_isr 0092              _reinicio_tmr0 02A7  
          adc_init@channel 0020                __pbssCOMMON 0077                  ___latbits 0002  
            __pcstackBANK0 0020             ?_reinicio_tmr0 0020                   ?_t0_init 0070  
                _configOsc 00F8                  __pstrings 0291          interrupt_function 0004  
                 _IOCBbits 0096                  _valor_adc 002A                 ?_configOsc 0020  
               _ADCON0bits 001F                __stringbase 0296                 _ADCON1bits 009F  
                 _WPUBbits 0095            ??_reinicio_tmr0 0022            _separar_nibbles 0277  
       __end_of__stringtab 0297                   _adc_init 0239                   _adc_read 025C  
                 _ioc_init 01A7                ??_configOsc 0022                 _INTCONbits 000B  
                 intlevel1 0000    __end_of_separar_nibbles 0291                  stringcode 0291  
               _OSCCONbits 008F                   stringdir 0291                   stringtab 0291  
