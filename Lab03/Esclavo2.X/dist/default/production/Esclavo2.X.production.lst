

Microchip MPLAB XC8 Assembler V2.35 build 20211206165544 
                                                                                               Tue Aug 01 18:05:56 2023

Microchip MPLAB XC8 C Compiler v2.35 (Free license) build 20211206165544 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.40
    22                           ; Generated 17/11/2021 GMT
    23                           ; 
    24                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution. Publication is not required when
    38                           ;        this file is used in an embedded application.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212  0000                     	;# 
   213  0001                     	;# 
   214  0002                     	;# 
   215  0003                     	;# 
   216  0004                     	;# 
   217  0005                     	;# 
   218  0006                     	;# 
   219  0007                     	;# 
   220  0008                     	;# 
   221  0009                     	;# 
   222  000A                     	;# 
   223  000B                     	;# 
   224  000C                     	;# 
   225  000D                     	;# 
   226  000E                     	;# 
   227  000E                     	;# 
   228  000F                     	;# 
   229  0010                     	;# 
   230  0011                     	;# 
   231  0012                     	;# 
   232  0013                     	;# 
   233  0014                     	;# 
   234  0015                     	;# 
   235  0015                     	;# 
   236  0016                     	;# 
   237  0017                     	;# 
   238  0018                     	;# 
   239  0019                     	;# 
   240  001A                     	;# 
   241  001B                     	;# 
   242  001B                     	;# 
   243  001C                     	;# 
   244  001D                     	;# 
   245  001E                     	;# 
   246  001F                     	;# 
   247  0081                     	;# 
   248  0085                     	;# 
   249  0086                     	;# 
   250  0087                     	;# 
   251  0088                     	;# 
   252  0089                     	;# 
   253  008C                     	;# 
   254  008D                     	;# 
   255  008E                     	;# 
   256  008F                     	;# 
   257  0090                     	;# 
   258  0091                     	;# 
   259  0092                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0093                     	;# 
   263  0094                     	;# 
   264  0095                     	;# 
   265  0096                     	;# 
   266  0097                     	;# 
   267  0098                     	;# 
   268  0099                     	;# 
   269  009A                     	;# 
   270  009B                     	;# 
   271  009C                     	;# 
   272  009D                     	;# 
   273  009E                     	;# 
   274  009F                     	;# 
   275  0105                     	;# 
   276  0107                     	;# 
   277  0108                     	;# 
   278  0109                     	;# 
   279  010C                     	;# 
   280  010C                     	;# 
   281  010D                     	;# 
   282  010E                     	;# 
   283  010F                     	;# 
   284  0185                     	;# 
   285  0187                     	;# 
   286  0188                     	;# 
   287  0189                     	;# 
   288  018C                     	;# 
   289  018D                     	;# 
   290  0000                     	;# 
   291  0001                     	;# 
   292  0002                     	;# 
   293  0003                     	;# 
   294  0004                     	;# 
   295  0005                     	;# 
   296  0006                     	;# 
   297  0007                     	;# 
   298  0008                     	;# 
   299  0009                     	;# 
   300  000A                     	;# 
   301  000B                     	;# 
   302  000C                     	;# 
   303  000D                     	;# 
   304  000E                     	;# 
   305  000E                     	;# 
   306  000F                     	;# 
   307  0010                     	;# 
   308  0011                     	;# 
   309  0012                     	;# 
   310  0013                     	;# 
   311  0014                     	;# 
   312  0015                     	;# 
   313  0015                     	;# 
   314  0016                     	;# 
   315  0017                     	;# 
   316  0018                     	;# 
   317  0019                     	;# 
   318  001A                     	;# 
   319  001B                     	;# 
   320  001B                     	;# 
   321  001C                     	;# 
   322  001D                     	;# 
   323  001E                     	;# 
   324  001F                     	;# 
   325  0081                     	;# 
   326  0085                     	;# 
   327  0086                     	;# 
   328  0087                     	;# 
   329  0088                     	;# 
   330  0089                     	;# 
   331  008C                     	;# 
   332  008D                     	;# 
   333  008E                     	;# 
   334  008F                     	;# 
   335  0090                     	;# 
   336  0091                     	;# 
   337  0092                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0093                     	;# 
   341  0094                     	;# 
   342  0095                     	;# 
   343  0096                     	;# 
   344  0097                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009A                     	;# 
   348  009B                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  0105                     	;# 
   354  0107                     	;# 
   355  0108                     	;# 
   356  0109                     	;# 
   357  010C                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  0185                     	;# 
   363  0187                     	;# 
   364  0188                     	;# 
   365  0189                     	;# 
   366  018C                     	;# 
   367  018D                     	;# 
   368  0000                     	;# 
   369  0001                     	;# 
   370  0002                     	;# 
   371  0003                     	;# 
   372  0004                     	;# 
   373  0005                     	;# 
   374  0006                     	;# 
   375  0007                     	;# 
   376  0008                     	;# 
   377  0009                     	;# 
   378  000A                     	;# 
   379  000B                     	;# 
   380  000C                     	;# 
   381  000D                     	;# 
   382  000E                     	;# 
   383  000E                     	;# 
   384  000F                     	;# 
   385  0010                     	;# 
   386  0011                     	;# 
   387  0012                     	;# 
   388  0013                     	;# 
   389  0014                     	;# 
   390  0015                     	;# 
   391  0015                     	;# 
   392  0016                     	;# 
   393  0017                     	;# 
   394  0018                     	;# 
   395  0019                     	;# 
   396  001A                     	;# 
   397  001B                     	;# 
   398  001B                     	;# 
   399  001C                     	;# 
   400  001D                     	;# 
   401  001E                     	;# 
   402  001F                     	;# 
   403  0081                     	;# 
   404  0085                     	;# 
   405  0086                     	;# 
   406  0087                     	;# 
   407  0088                     	;# 
   408  0089                     	;# 
   409  008C                     	;# 
   410  008D                     	;# 
   411  008E                     	;# 
   412  008F                     	;# 
   413  0090                     	;# 
   414  0091                     	;# 
   415  0092                     	;# 
   416  0093                     	;# 
   417  0093                     	;# 
   418  0093                     	;# 
   419  0094                     	;# 
   420  0095                     	;# 
   421  0096                     	;# 
   422  0097                     	;# 
   423  0098                     	;# 
   424  0099                     	;# 
   425  009A                     	;# 
   426  009B                     	;# 
   427  009C                     	;# 
   428  009D                     	;# 
   429  009E                     	;# 
   430  009F                     	;# 
   431  0105                     	;# 
   432  0107                     	;# 
   433  0108                     	;# 
   434  0109                     	;# 
   435  010C                     	;# 
   436  010C                     	;# 
   437  010D                     	;# 
   438  010E                     	;# 
   439  010F                     	;# 
   440  0185                     	;# 
   441  0187                     	;# 
   442  0188                     	;# 
   443  0189                     	;# 
   444  018C                     	;# 
   445  018D                     	;# 
   446  0013                     _SSPBUF	set	19
   447  0014                     _SSPCON	set	20
   448  001E                     _ADRESH	set	30
   449  001F                     _ADCON0bits	set	31
   450  000C                     _PIR1bits	set	12
   451  000B                     _INTCONbits	set	11
   452  0008                     _PORTD	set	8
   453  0006                     _PORTB	set	6
   454  0063                     _SSPIF	set	99
   455  0094                     _SSPSTATbits	set	148
   456  0094                     _SSPSTAT	set	148
   457  008F                     _OSCCONbits	set	143
   458  009F                     _ADCON1bits	set	159
   459  0085                     _TRISAbits	set	133
   460  008C                     _PIE1bits	set	140
   461  0088                     _TRISD	set	136
   462  0086                     _TRISB	set	134
   463  043B                     _TRISC3	set	1083
   464  043D                     _TRISC5	set	1085
   465  0188                     _ANSELbits	set	392
   466  0189                     _ANSELH	set	393
   467  0188                     _ANSEL	set	392
   468                           
   469                           	psect	cinit
   470  000F                     start_initialization:	
   471                           ; #config settings
   472                           
   473  000F                     __initialization:
   474                           
   475                           ; Clear objects allocated to COMMON
   476  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   477  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   478  0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   479  0012                     end_of_initialization:	
   480                           ;End of C runtime variable initialization code
   481                           
   482  0012                     __end_of__initialization:
   483  0012  0183               	clrf	3
   484  0013  120A  118A  2897   	ljmp	_main	;jump to C main() function
   485                           
   486                           	psect	bssCOMMON
   487  0077                     __pbssCOMMON:
   488  0077                     _valor_adc:
   489  0077                     	ds	2
   490  0079                     _temporal:
   491  0079                     	ds	1
   492                           
   493                           	psect	cstackCOMMON
   494  0070                     __pcstackCOMMON:
   495  0070                     ?_spiWrite:
   496  0070                     ??_spiWrite:	
   497                           ; 1 bytes @ 0x0
   498                           
   499  0070                     ?_setup:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_isr:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_main:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     spiWrite@dat:	
   509                           ; 1 bytes @ 0x0
   510                           
   511                           
   512                           ; 1 bytes @ 0x0
   513  0070                     	ds	1
   514  0071                     ??_isr:
   515                           
   516                           ; 1 bytes @ 0x1
   517  0071                     	ds	2
   518  0073                     ?_configOsc:
   519  0073                     ?_adc_init:	
   520                           ; 1 bytes @ 0x3
   521                           
   522  0073                     ?_spiInit:	
   523                           ; 1 bytes @ 0x3
   524                           
   525  0073                     ?_adc_read:	
   526                           ; 1 bytes @ 0x3
   527                           
   528  0073                     spiInit@sDataSample:	
   529                           ; 2 bytes @ 0x3
   530                           
   531  0073                     adc_init@channel:	
   532                           ; 1 bytes @ 0x3
   533                           
   534  0073                     configOsc@frec:	
   535                           ; 2 bytes @ 0x3
   536                           
   537                           
   538                           ; 2 bytes @ 0x3
   539  0073                     	ds	1
   540  0074                     spiInit@sClockIdle:
   541                           
   542                           ; 1 bytes @ 0x4
   543  0074                     	ds	1
   544  0075                     ??_adc_read:
   545  0075                     ??_configOsc:	
   546                           ; 1 bytes @ 0x5
   547                           
   548  0075                     ??_adc_init:	
   549                           ; 1 bytes @ 0x5
   550                           
   551  0075                     spiInit@sTransmitEdge:	
   552                           ; 1 bytes @ 0x5
   553                           
   554                           
   555                           ; 1 bytes @ 0x5
   556  0075                     	ds	1
   557  0076                     ??_spiInit:
   558  0076                     spiInit@sType:	
   559                           ; 1 bytes @ 0x6
   560                           
   561                           
   562                           ; 1 bytes @ 0x6
   563  0076                     	ds	1
   564  0077                     ??_setup:
   565                           
   566                           	psect	cstackBANK0
   567  0020                     __pcstackBANK0:	
   568                           ; 1 bytes @ 0x7
   569                           
   570  0020                     ??_main:
   571                           
   572                           ; 1 bytes @ 0x0
   573  0020                     	ds	3
   574                           
   575                           	psect	maintext
   576  0097                     __pmaintext:	
   577 ;;
   578 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   579 ;;
   580 ;; *************** function _main *****************
   581 ;; Defined at:
   582 ;;		line 70 in file "Esclavo2.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;		None
   587 ;; Return value:  Size  Location     Type
   588 ;;                  1    wreg      void 
   589 ;; Registers used:
   590 ;;		wreg, status,2, status,0, pclath, cstack
   591 ;; Tracked objects:
   592 ;;		On entry : B00/0
   593 ;;		On exit  : 0/0
   594 ;;		Unchanged: 0/0
   595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   596 ;;      Params:         0       0       0       0       0
   597 ;;      Locals:         0       0       0       0       0
   598 ;;      Temps:          0       3       0       0       0
   599 ;;      Totals:         0       3       0       0       0
   600 ;;Total ram usage:        3 bytes
   601 ;; Hardware stack levels required when called: 4
   602 ;; This function calls:
   603 ;;		_adc_read
   604 ;;		_setup
   605 ;; This function is called by:
   606 ;;		Startup code after reset
   607 ;; This function uses a non-reentrant model
   608 ;;
   609                           
   610  0097                     _main:	
   611                           ;psect for function _main
   612                           
   613  0097                     l933:	
   614                           ;incstack = 0
   615                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   616                           
   617                           
   618                           ;Esclavo2.c: 71:     setup();
   619  0097  120A  118A  2067  120A  118A  	fcall	_setup
   620  009C                     l935:
   621                           
   622                           ;Esclavo2.c: 74:         valor_adc = adc_read();
   623  009C  120A  118A  20E1  120A  118A  	fcall	_adc_read
   624  00A1  0874               	movf	?_adc_read+1,w
   625  00A2  00F8               	movwf	_valor_adc+1
   626  00A3  0873               	movf	?_adc_read,w
   627  00A4  00F7               	movwf	_valor_adc
   628  00A5                     l937:
   629                           
   630                           ;Esclavo2.c: 76:         PORTB = adc_read();
   631  00A5  120A  118A  20E1  120A  118A  	fcall	_adc_read
   632  00AA  0873               	movf	?_adc_read,w
   633  00AB  1283               	bcf	3,5	;RP0=0, select bank0
   634  00AC  1303               	bcf	3,6	;RP1=0, select bank0
   635  00AD  0086               	movwf	6	;volatile
   636  00AE                     l939:
   637                           
   638                           ;Esclavo2.c: 77:        _delay((unsigned long)((250)*(4000000/4000.0)));
   639  00AE  3002               	movlw	2
   640  00AF  1283               	bcf	3,5	;RP0=0, select bank0
   641  00B0  1303               	bcf	3,6	;RP1=0, select bank0
   642  00B1  00A2               	movwf	??_main+2
   643  00B2  3045               	movlw	69
   644  00B3  00A1               	movwf	??_main+1
   645  00B4  30A9               	movlw	169
   646  00B5  00A0               	movwf	??_main
   647  00B6                     u197:
   648  00B6  0BA0               	decfsz	??_main,f
   649  00B7  28B6               	goto	u197
   650  00B8  0BA1               	decfsz	??_main+1,f
   651  00B9  28B6               	goto	u197
   652  00BA  0BA2               	decfsz	??_main+2,f
   653  00BB  28B6               	goto	u197
   654  00BC  289C               	goto	l935
   655  00BD  120A  118A  280C   	ljmp	start
   656  00C0                     __end_of_main:
   657                           
   658                           	psect	text1
   659  0067                     __ptext1:	
   660 ;; *************** function _setup *****************
   661 ;; Defined at:
   662 ;;		line 85 in file "Esclavo2.c"
   663 ;; Parameters:    Size  Location     Type
   664 ;;		None
   665 ;; Auto vars:     Size  Location     Type
   666 ;;		None
   667 ;; Return value:  Size  Location     Type
   668 ;;                  1    wreg      void 
   669 ;; Registers used:
   670 ;;		wreg, status,2, status,0, pclath, cstack
   671 ;; Tracked objects:
   672 ;;		On entry : 0/0
   673 ;;		On exit  : 0/0
   674 ;;		Unchanged: 0/0
   675 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   676 ;;      Params:         0       0       0       0       0
   677 ;;      Locals:         0       0       0       0       0
   678 ;;      Temps:          0       0       0       0       0
   679 ;;      Totals:         0       0       0       0       0
   680 ;;Total ram usage:        0 bytes
   681 ;; Hardware stack levels used: 1
   682 ;; Hardware stack levels required when called: 3
   683 ;; This function calls:
   684 ;;		_adc_init
   685 ;;		_configOsc
   686 ;;		_spiInit
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692  0067                     _setup:	
   693                           ;psect for function _setup
   694                           
   695  0067                     l895:	
   696                           ;incstack = 0
   697                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   698                           
   699                           
   700                           ;Esclavo2.c: 89:     configOsc(4);
   701  0067  3004               	movlw	4
   702  0068  00F3               	movwf	configOsc@frec
   703  0069  3000               	movlw	0
   704  006A  00F4               	movwf	configOsc@frec+1
   705  006B  120A  118A  2016  120A  118A  	fcall	_configOsc
   706  0070                     l897:
   707                           
   708                           ;Esclavo2.c: 93:     ANSEL = 0;
   709  0070  1683               	bsf	3,5	;RP0=1, select bank3
   710  0071  1703               	bsf	3,6	;RP1=1, select bank3
   711  0072  0188               	clrf	8	;volatile
   712  0073                     l899:
   713                           
   714                           ;Esclavo2.c: 94:     ANSELH = 0;
   715  0073  0189               	clrf	9	;volatile
   716  0074                     l901:
   717                           
   718                           ;Esclavo2.c: 96:     TRISB = 0;
   719  0074  1683               	bsf	3,5	;RP0=1, select bank1
   720  0075  1303               	bcf	3,6	;RP1=0, select bank1
   721  0076  0186               	clrf	6	;volatile
   722  0077                     l903:
   723                           
   724                           ;Esclavo2.c: 97:     TRISD = 0;
   725  0077  0188               	clrf	8	;volatile
   726  0078                     l905:
   727                           
   728                           ;Esclavo2.c: 99:     PORTB = 0;
   729  0078  1283               	bcf	3,5	;RP0=0, select bank0
   730  0079  1303               	bcf	3,6	;RP1=0, select bank0
   731  007A  0186               	clrf	6	;volatile
   732  007B                     l907:
   733                           
   734                           ;Esclavo2.c: 100:     PORTD = 0;
   735  007B  0188               	clrf	8	;volatile
   736                           
   737                           ;Esclavo2.c: 104:     adc_init(0);
   738  007C  3000               	movlw	0
   739  007D  00F3               	movwf	adc_init@channel
   740  007E  00F4               	movwf	adc_init@channel+1
   741  007F  120A  118A  20C0  120A  118A  	fcall	_adc_init
   742  0084                     l909:
   743                           
   744                           ;Esclavo2.c: 108:     INTCONbits.GIE = 1;
   745  0084  178B               	bsf	11,7	;volatile
   746  0085                     l911:
   747                           
   748                           ;Esclavo2.c: 109:     INTCONbits.PEIE = 1;
   749  0085  170B               	bsf	11,6	;volatile
   750  0086                     l913:
   751                           
   752                           ;Esclavo2.c: 110:     PIR1bits.SSPIF = 0;
   753  0086  1283               	bcf	3,5	;RP0=0, select bank0
   754  0087  1303               	bcf	3,6	;RP1=0, select bank0
   755  0088  118C               	bcf	12,3	;volatile
   756  0089                     l915:
   757                           
   758                           ;Esclavo2.c: 111:     PIE1bits.SSPIE = 1;
   759  0089  1683               	bsf	3,5	;RP0=1, select bank1
   760  008A  1303               	bcf	3,6	;RP1=0, select bank1
   761  008B  158C               	bsf	12,3	;volatile
   762  008C                     l917:
   763                           
   764                           ;Esclavo2.c: 112:     TRISAbits.TRISA5 = 1;
   765  008C  1685               	bsf	5,5	;volatile
   766                           
   767                           ;Esclavo2.c: 113:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   768  008D  01F3               	clrf	spiInit@sDataSample
   769  008E  01F4               	clrf	spiInit@sClockIdle
   770  008F  01F5               	clrf	spiInit@sTransmitEdge
   771  0090  3024               	movlw	36
   772  0091  120A  118A  20FB  120A  118A  	fcall	_spiInit
   773  0096                     l57:
   774  0096  0008               	return
   775  0097                     __end_of_setup:
   776                           
   777                           	psect	text2
   778  00FB                     __ptext2:	
   779 ;; *************** function _spiInit *****************
   780 ;; Defined at:
   781 ;;		line 12 in file "SPI.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;  sType           1    wreg     enum E1292
   784 ;;  sDataSample     1    3[COMMON] enum E1300
   785 ;;  sClockIdle      1    4[COMMON] enum E1304
   786 ;;  sTransmitEdg    1    5[COMMON] enum E1308
   787 ;; Auto vars:     Size  Location     Type
   788 ;;  sType           1    6[COMMON] enum E1292
   789 ;; Return value:  Size  Location     Type
   790 ;;                  1    wreg      void 
   791 ;; Registers used:
   792 ;;		wreg, status,2, status,0
   793 ;; Tracked objects:
   794 ;;		On entry : 0/0
   795 ;;		On exit  : 0/0
   796 ;;		Unchanged: 0/0
   797 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   798 ;;      Params:         3       0       0       0       0
   799 ;;      Locals:         1       0       0       0       0
   800 ;;      Temps:          0       0       0       0       0
   801 ;;      Totals:         4       0       0       0       0
   802 ;;Total ram usage:        4 bytes
   803 ;; Hardware stack levels used: 1
   804 ;; Hardware stack levels required when called: 2
   805 ;; This function calls:
   806 ;;		Nothing
   807 ;; This function is called by:
   808 ;;		_setup
   809 ;; This function uses a non-reentrant model
   810 ;;
   811                           
   812  00FB                     _spiInit:	
   813                           ;psect for function _spiInit
   814                           
   815                           
   816                           ;incstack = 0
   817                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   818                           ;spiInit@sType stored from wreg
   819  00FB  00F6               	movwf	spiInit@sType
   820  00FC                     l885:
   821                           
   822                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   823  00FC  1683               	bsf	3,5	;RP0=1, select bank1
   824  00FD  1303               	bcf	3,6	;RP1=0, select bank1
   825  00FE  1287               	bcf	7,5	;volatile
   826                           
   827                           ;SPI.c: 15:     if(sType & 0b00000100)
   828  00FF  1D76               	btfss	spiInit@sType,2
   829  0100  2902               	goto	u171
   830  0101  2903               	goto	u170
   831  0102                     u171:
   832  0102  2907               	goto	l891
   833  0103                     u170:
   834  0103                     l887:
   835                           
   836                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   837  0103  0875               	movf	spiInit@sTransmitEdge,w
   838  0104  0094               	movwf	20	;volatile
   839  0105                     l889:
   840                           
   841                           ;SPI.c: 18:         TRISC3 = 1;
   842  0105  1587               	bsf	7,3	;volatile
   843                           
   844                           ;SPI.c: 19:     }
   845  0106  290B               	goto	l123
   846  0107                     l891:
   847                           
   848                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   849  0107  0873               	movf	spiInit@sDataSample,w
   850  0108  0475               	iorwf	spiInit@sTransmitEdge,w
   851  0109  0094               	movwf	20	;volatile
   852  010A                     l893:
   853                           
   854                           ;SPI.c: 23:         TRISC3 = 0;
   855  010A  1187               	bcf	7,3	;volatile
   856  010B                     l123:	
   857                           ;SPI.c: 24:     }
   858                           
   859                           
   860                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   861  010B  0876               	movf	spiInit@sType,w
   862  010C  0474               	iorwf	spiInit@sClockIdle,w
   863  010D  1283               	bcf	3,5	;RP0=0, select bank0
   864  010E  1303               	bcf	3,6	;RP1=0, select bank0
   865  010F  0094               	movwf	20	;volatile
   866  0110                     l124:
   867  0110  0008               	return
   868  0111                     __end_of_spiInit:
   869                           
   870                           	psect	text3
   871  0016                     __ptext3:	
   872 ;; *************** function _configOsc *****************
   873 ;; Defined at:
   874 ;;		line 3 in file "Oscilador.c"
   875 ;; Parameters:    Size  Location     Type
   876 ;;  frec            2    3[COMMON] unsigned int 
   877 ;; Auto vars:     Size  Location     Type
   878 ;;		None
   879 ;; Return value:  Size  Location     Type
   880 ;;                  1    wreg      void 
   881 ;; Registers used:
   882 ;;		wreg, status,2, status,0
   883 ;; Tracked objects:
   884 ;;		On entry : 0/0
   885 ;;		On exit  : 0/0
   886 ;;		Unchanged: 0/0
   887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   888 ;;      Params:         2       0       0       0       0
   889 ;;      Locals:         0       0       0       0       0
   890 ;;      Temps:          0       0       0       0       0
   891 ;;      Totals:         2       0       0       0       0
   892 ;;Total ram usage:        2 bytes
   893 ;; Hardware stack levels used: 1
   894 ;; Hardware stack levels required when called: 2
   895 ;; This function calls:
   896 ;;		Nothing
   897 ;; This function is called by:
   898 ;;		_setup
   899 ;; This function uses a non-reentrant model
   900 ;;
   901                           
   902  0016                     _configOsc:	
   903                           ;psect for function _configOsc
   904                           
   905  0016                     l861:	
   906                           ;incstack = 0
   907                           ; Regs used in _configOsc: [wreg+status,2+status,0]
   908                           
   909                           
   910                           ;Oscilador.c: 5:     if(frec == 8){
   911  0016  3008               	movlw	8
   912  0017  0673               	xorwf	configOsc@frec,w
   913  0018  0474               	iorwf	configOsc@frec+1,w
   914  0019  1D03               	btfss	3,2
   915  001A  281C               	goto	u111
   916  001B  281D               	goto	u110
   917  001C                     u111:
   918  001C  2821               	goto	l101
   919  001D                     u110:
   920  001D                     l863:
   921                           
   922                           ;Oscilador.c: 7:         OSCCONbits.IRCF = 0b111;
   923  001D  3070               	movlw	112
   924  001E  1683               	bsf	3,5	;RP0=1, select bank1
   925  001F  1303               	bcf	3,6	;RP1=0, select bank1
   926  0020  048F               	iorwf	15,f	;volatile
   927  0021                     l101:	
   928                           ;Oscilador.c: 9:     }
   929                           
   930                           
   931                           ;Oscilador.c: 11:     if(frec == 4){
   932  0021  3004               	movlw	4
   933  0022  0673               	xorwf	configOsc@frec,w
   934  0023  0474               	iorwf	configOsc@frec+1,w
   935  0024  1D03               	btfss	3,2
   936  0025  2827               	goto	u121
   937  0026  2828               	goto	u120
   938  0027                     u121:
   939  0027  282E               	goto	l102
   940  0028                     u120:
   941  0028                     l865:
   942                           
   943                           ;Oscilador.c: 13:         OSCCONbits.IRCF = 0b110;
   944  0028  1683               	bsf	3,5	;RP0=1, select bank1
   945  0029  1303               	bcf	3,6	;RP1=0, select bank1
   946  002A  080F               	movf	15,w	;volatile
   947  002B  398F               	andlw	-113
   948  002C  3860               	iorlw	96
   949  002D  008F               	movwf	15	;volatile
   950  002E                     l102:	
   951                           ;Oscilador.c: 15:     }
   952                           
   953                           
   954                           ;Oscilador.c: 17:     if(frec == 1){
   955  002E  0373               	decf	configOsc@frec,w
   956  002F  0474               	iorwf	configOsc@frec+1,w
   957  0030  1D03               	btfss	3,2
   958  0031  2833               	goto	u131
   959  0032  2834               	goto	u130
   960  0033                     u131:
   961  0033  283A               	goto	l103
   962  0034                     u130:
   963  0034                     l867:
   964                           
   965                           ;Oscilador.c: 19:         OSCCONbits.IRCF = 0b100;
   966  0034  1683               	bsf	3,5	;RP0=1, select bank1
   967  0035  1303               	bcf	3,6	;RP1=0, select bank1
   968  0036  080F               	movf	15,w	;volatile
   969  0037  398F               	andlw	-113
   970  0038  3840               	iorlw	64
   971  0039  008F               	movwf	15	;volatile
   972  003A                     l103:	
   973                           ;Oscilador.c: 21:     }
   974                           
   975                           
   976                           ;Oscilador.c: 23:     if(frec == 500){
   977  003A  30F4               	movlw	244
   978  003B  0673               	xorwf	configOsc@frec,w
   979  003C  1D03               	skipz
   980  003D  2842               	goto	u141
   981  003E  0374               	decf	configOsc@frec+1,w
   982  003F  1D03               	btfss	3,2
   983  0040  2842               	goto	u141
   984  0041  2843               	goto	u140
   985  0042                     u141:
   986  0042  2849               	goto	l104
   987  0043                     u140:
   988  0043                     l869:
   989                           
   990                           ;Oscilador.c: 25:         OSCCONbits.IRCF = 0b011;
   991  0043  1683               	bsf	3,5	;RP0=1, select bank1
   992  0044  1303               	bcf	3,6	;RP1=0, select bank1
   993  0045  080F               	movf	15,w	;volatile
   994  0046  398F               	andlw	-113
   995  0047  3830               	iorlw	48
   996  0048  008F               	movwf	15	;volatile
   997  0049                     l104:	
   998                           ;Oscilador.c: 27:     }
   999                           
  1000                           
  1001                           ;Oscilador.c: 29:     if(frec == 250){
  1002  0049  30FA               	movlw	250
  1003  004A  0673               	xorwf	configOsc@frec,w
  1004  004B  0474               	iorwf	configOsc@frec+1,w
  1005  004C  1D03               	btfss	3,2
  1006  004D  284F               	goto	u151
  1007  004E  2850               	goto	u150
  1008  004F                     u151:
  1009  004F  2856               	goto	l105
  1010  0050                     u150:
  1011  0050                     l871:
  1012                           
  1013                           ;Oscilador.c: 31:         OSCCONbits.IRCF = 0b010;
  1014  0050  1683               	bsf	3,5	;RP0=1, select bank1
  1015  0051  1303               	bcf	3,6	;RP1=0, select bank1
  1016  0052  080F               	movf	15,w	;volatile
  1017  0053  398F               	andlw	-113
  1018  0054  3820               	iorlw	32
  1019  0055  008F               	movwf	15	;volatile
  1020  0056                     l105:	
  1021                           ;Oscilador.c: 33:     }
  1022                           
  1023                           
  1024                           ;Oscilador.c: 35:     if(frec == 125){
  1025  0056  307D               	movlw	125
  1026  0057  0673               	xorwf	configOsc@frec,w
  1027  0058  0474               	iorwf	configOsc@frec+1,w
  1028  0059  1D03               	btfss	3,2
  1029  005A  285C               	goto	u161
  1030  005B  285D               	goto	u160
  1031  005C                     u161:
  1032  005C  2863               	goto	l875
  1033  005D                     u160:
  1034  005D                     l873:
  1035                           
  1036                           ;Oscilador.c: 37:         OSCCONbits.IRCF = 0b001;
  1037  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1038  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1039  005F  080F               	movf	15,w	;volatile
  1040  0060  398F               	andlw	-113
  1041  0061  3810               	iorlw	16
  1042  0062  008F               	movwf	15	;volatile
  1043  0063                     l875:
  1044                           
  1045                           ;Oscilador.c: 41:     OSCCONbits.SCS = 1;
  1046  0063  1683               	bsf	3,5	;RP0=1, select bank1
  1047  0064  1303               	bcf	3,6	;RP1=0, select bank1
  1048  0065  140F               	bsf	15,0	;volatile
  1049  0066                     l107:
  1050  0066  0008               	return
  1051  0067                     __end_of_configOsc:
  1052                           
  1053                           	psect	text4
  1054  00C0                     __ptext4:	
  1055 ;; *************** function _adc_init *****************
  1056 ;; Defined at:
  1057 ;;		line 3 in file "Config_ADC.c"
  1058 ;; Parameters:    Size  Location     Type
  1059 ;;  channel         2    3[COMMON] int 
  1060 ;; Auto vars:     Size  Location     Type
  1061 ;;		None
  1062 ;; Return value:  Size  Location     Type
  1063 ;;                  1    wreg      void 
  1064 ;; Registers used:
  1065 ;;		wreg, status,2, status,0
  1066 ;; Tracked objects:
  1067 ;;		On entry : 0/0
  1068 ;;		On exit  : 0/0
  1069 ;;		Unchanged: 0/0
  1070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1071 ;;      Params:         2       0       0       0       0
  1072 ;;      Locals:         0       0       0       0       0
  1073 ;;      Temps:          1       0       0       0       0
  1074 ;;      Totals:         3       0       0       0       0
  1075 ;;Total ram usage:        3 bytes
  1076 ;; Hardware stack levels used: 1
  1077 ;; Hardware stack levels required when called: 2
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_setup
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085  00C0                     _adc_init:	
  1086                           ;psect for function _adc_init
  1087                           
  1088  00C0                     l877:	
  1089                           ;incstack = 0
  1090                           ; Regs used in _adc_init: [wreg+status,2+status,0]
  1091                           
  1092                           
  1093                           ;Config_ADC.c: 7:     TRISAbits.TRISA0 = 1;
  1094  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  1095  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  1096  00C2  1405               	bsf	5,0	;volatile
  1097                           
  1098                           ;Config_ADC.c: 8:     ANSELbits.ANS0 = 1;
  1099  00C3  1683               	bsf	3,5	;RP0=1, select bank3
  1100  00C4  1703               	bsf	3,6	;RP1=1, select bank3
  1101  00C5  1408               	bsf	8,0	;volatile
  1102                           
  1103                           ;Config_ADC.c: 12:     ADCON0bits.ADCS1 = 0;
  1104  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1105  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1106  00C8  139F               	bcf	31,7	;volatile
  1107                           
  1108                           ;Config_ADC.c: 13:     ADCON0bits.ADCS0 = 1;
  1109  00C9  171F               	bsf	31,6	;volatile
  1110                           
  1111                           ;Config_ADC.c: 15:     ADCON1bits.VCFG1 = 0;
  1112  00CA  1683               	bsf	3,5	;RP0=1, select bank1
  1113  00CB  1303               	bcf	3,6	;RP1=0, select bank1
  1114  00CC  129F               	bcf	31,5	;volatile
  1115                           
  1116                           ;Config_ADC.c: 16:     ADCON1bits.VCFG0 = 0;
  1117  00CD  121F               	bcf	31,4	;volatile
  1118                           
  1119                           ;Config_ADC.c: 18:     ADCON1bits.ADFM = 0;
  1120  00CE  139F               	bcf	31,7	;volatile
  1121  00CF                     l879:
  1122                           
  1123                           ;Config_ADC.c: 20:     ADCON0bits.CHS = channel;
  1124  00CF  0873               	movf	adc_init@channel,w
  1125  00D0  00F5               	movwf	??_adc_init
  1126  00D1  0DF5               	rlf	??_adc_init,f
  1127  00D2  0DF5               	rlf	??_adc_init,f
  1128  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1129  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1130  00D5  081F               	movf	31,w	;volatile
  1131  00D6  0675               	xorwf	??_adc_init,w
  1132  00D7  39C3               	andlw	-61
  1133  00D8  0675               	xorwf	??_adc_init,w
  1134  00D9  009F               	movwf	31	;volatile
  1135  00DA                     l881:
  1136                           
  1137                           ;Config_ADC.c: 22:     ADCON0bits.ADON = 1;
  1138  00DA  141F               	bsf	31,0	;volatile
  1139  00DB                     l883:
  1140                           
  1141                           ;Config_ADC.c: 23:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1142  00DB  3042               	movlw	66
  1143  00DC  00F5               	movwf	??_adc_init
  1144  00DD                     u207:
  1145  00DD  0BF5               	decfsz	??_adc_init,f
  1146  00DE  28DD               	goto	u207
  1147  00DF  0000               	nop
  1148  00E0                     l72:
  1149  00E0  0008               	return
  1150  00E1                     __end_of_adc_init:
  1151                           
  1152                           	psect	text5
  1153  00E1                     __ptext5:	
  1154 ;; *************** function _adc_read *****************
  1155 ;; Defined at:
  1156 ;;		line 27 in file "Config_ADC.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  2    3[COMMON] int 
  1163 ;; Registers used:
  1164 ;;		wreg
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         2       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          2       0       0       0       0
  1173 ;;      Totals:         4       0       0       0       0
  1174 ;;Total ram usage:        4 bytes
  1175 ;; Hardware stack levels used: 1
  1176 ;; Hardware stack levels required when called: 2
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184  00E1                     _adc_read:	
  1185                           ;psect for function _adc_read
  1186                           
  1187  00E1                     l919:	
  1188                           ;incstack = 0
  1189                           ; Regs used in _adc_read: [wreg]
  1190                           
  1191                           
  1192                           ;Config_ADC.c: 30:         ADCON0bits.GO = 1;
  1193  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00E3  149F               	bsf	31,1	;volatile
  1196  00E4                     l75:	
  1197                           ;Config_ADC.c: 31:         while(ADCON0bits.GO == 1);
  1198                           
  1199  00E4  189F               	btfsc	31,1	;volatile
  1200  00E5  28E7               	goto	u181
  1201  00E6  28E8               	goto	u180
  1202  00E7                     u181:
  1203  00E7  28E4               	goto	l75
  1204  00E8                     u180:
  1205  00E8                     l921:
  1206                           
  1207                           ;Config_ADC.c: 32:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1208  00E8  301A               	movlw	26
  1209  00E9  00F6               	movwf	??_adc_read+1
  1210  00EA  30F8               	movlw	248
  1211  00EB  00F5               	movwf	??_adc_read
  1212  00EC                     u217:
  1213  00EC  0BF5               	decfsz	??_adc_read,f
  1214  00ED  28EC               	goto	u217
  1215  00EE  0BF6               	decfsz	??_adc_read+1,f
  1216  00EF  28EC               	goto	u217
  1217  00F0  0000               	nop
  1218                           
  1219                           ;Config_ADC.c: 33:         return ADRESH;
  1220  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1221  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1222  00F3  081E               	movf	30,w	;volatile
  1223  00F4  00F5               	movwf	??_adc_read
  1224  00F5  01F6               	clrf	??_adc_read+1
  1225  00F6  0875               	movf	??_adc_read,w
  1226  00F7  00F3               	movwf	?_adc_read
  1227  00F8  0876               	movf	??_adc_read+1,w
  1228  00F9  00F4               	movwf	?_adc_read+1
  1229  00FA                     l78:
  1230  00FA  0008               	return
  1231  00FB                     __end_of_adc_read:
  1232                           
  1233                           	psect	text6
  1234  0111                     __ptext6:	
  1235 ;; *************** function _isr *****************
  1236 ;; Defined at:
  1237 ;;		line 56 in file "Esclavo2.c"
  1238 ;; Parameters:    Size  Location     Type
  1239 ;;		None
  1240 ;; Auto vars:     Size  Location     Type
  1241 ;;		None
  1242 ;; Return value:  Size  Location     Type
  1243 ;;                  1    wreg      void 
  1244 ;; Registers used:
  1245 ;;		wreg, status,2, status,0, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         0       0       0       0       0
  1252 ;;      Locals:         0       0       0       0       0
  1253 ;;      Temps:          2       0       0       0       0
  1254 ;;      Totals:         2       0       0       0       0
  1255 ;;Total ram usage:        2 bytes
  1256 ;; Hardware stack levels used: 1
  1257 ;; Hardware stack levels required when called: 1
  1258 ;; This function calls:
  1259 ;;		_spiWrite
  1260 ;; This function is called by:
  1261 ;;		Interrupt level 1
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265  0111                     _isr:	
  1266                           ;psect for function _isr
  1267                           
  1268  0111                     i1l801:
  1269                           
  1270                           ;Esclavo2.c: 58:    if(SSPIF == 1){
  1271  0111  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0112  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0113  1D8C               	btfss	12,3	;volatile
  1274  0114  2916               	goto	u10_21
  1275  0115  2917               	goto	u10_20
  1276  0116                     u10_21:
  1277  0116  2920               	goto	i1l46
  1278  0117                     u10_20:
  1279  0117                     i1l803:
  1280                           
  1281                           ;Esclavo2.c: 60:        spiWrite(valor_adc);
  1282  0117  0877               	movf	_valor_adc,w
  1283  0118  120A  118A  2127  120A  118A  	fcall	_spiWrite
  1284  011D                     i1l805:
  1285                           
  1286                           ;Esclavo2.c: 61:        SSPIF = 0;
  1287  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1288  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1289  011F  118C               	bcf	12,3	;volatile
  1290  0120                     i1l46:
  1291  0120  0872               	movf	??_isr+1,w
  1292  0121  008A               	movwf	10
  1293  0122  0E71               	swapf	??_isr,w
  1294  0123  0083               	movwf	3
  1295  0124  0EFE               	swapf	btemp,f
  1296  0125  0E7E               	swapf	btemp,w
  1297  0126  0009               	retfie
  1298  0127                     __end_of_isr:
  1299                           
  1300                           	psect	intentry
  1301  0004                     __pintentry:	
  1302                           ;incstack = 0
  1303                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1304                           
  1305  0004                     interrupt_function:
  1306  007E                     saved_w	set	btemp
  1307  0004  00FE               	movwf	btemp
  1308  0005  0E03               	swapf	3,w
  1309  0006  00F1               	movwf	??_isr
  1310  0007  080A               	movf	10,w
  1311  0008  00F2               	movwf	??_isr+1
  1312  0009  120A  118A  2911   	ljmp	_isr
  1313                           
  1314                           	psect	text7
  1315  0127                     __ptext7:	
  1316 ;; *************** function _spiWrite *****************
  1317 ;; Defined at:
  1318 ;;		line 34 in file "SPI.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;  dat             1    wreg     unsigned char 
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;  dat             1    0[COMMON] unsigned char 
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       0       0       0       0
  1333 ;;      Locals:         1       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0
  1335 ;;      Totals:         1       0       0       0       0
  1336 ;;Total ram usage:        1 bytes
  1337 ;; Hardware stack levels used: 1
  1338 ;; This function calls:
  1339 ;;		Nothing
  1340 ;; This function is called by:
  1341 ;;		_isr
  1342 ;; This function uses a non-reentrant model
  1343 ;;
  1344                           
  1345  0127                     _spiWrite:	
  1346                           ;psect for function _spiWrite
  1347                           
  1348                           
  1349                           ;incstack = 0
  1350                           ; Regs used in _spiWrite: [wreg]
  1351                           ;spiWrite@dat stored from wreg
  1352  0127  00F0               	movwf	spiWrite@dat
  1353  0128                     i1l767:
  1354                           
  1355                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1356  0128  0870               	movf	spiWrite@dat,w
  1357  0129  1283               	bcf	3,5	;RP0=0, select bank0
  1358  012A  1303               	bcf	3,6	;RP1=0, select bank0
  1359  012B  0093               	movwf	19	;volatile
  1360  012C                     i1l133:
  1361  012C  0008               	return
  1362  012D                     __end_of_spiWrite:
  1363  007E                     btemp	set	126	;btemp
  1364  007E                     wtemp0	set	126
  1365                           
  1366                           	psect	idloc
  1367                           
  1368                           ;Config register IDLOC0 @ 0x2000
  1369                           ;	unspecified, using default values
  1370  2000                     	org	8192
  1371  2000  3FFF               	dw	16383
  1372                           
  1373                           ;Config register IDLOC1 @ 0x2001
  1374                           ;	unspecified, using default values
  1375  2001                     	org	8193
  1376  2001  3FFF               	dw	16383
  1377                           
  1378                           ;Config register IDLOC2 @ 0x2002
  1379                           ;	unspecified, using default values
  1380  2002                     	org	8194
  1381  2002  3FFF               	dw	16383
  1382                           
  1383                           ;Config register IDLOC3 @ 0x2003
  1384                           ;	unspecified, using default values
  1385  2003                     	org	8195
  1386  2003  3FFF               	dw	16383
  1387                           
  1388                           	psect	config
  1389                           
  1390                           ;Config register CONFIG1 @ 0x2007
  1391                           ;	Oscillator Selection bits
  1392                           ;	FOSC = EXTRC_NOCLKOUT, RCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, RC on RA7
      +                          /OSC1/CLKIN
  1393                           ;	Watchdog Timer Enable bit
  1394                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1395                           ;	Power-up Timer Enable bit
  1396                           ;	PWRTE = OFF, PWRT disabled
  1397                           ;	RE3/MCLR pin function select bit
  1398                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1399                           ;	Code Protection bit
  1400                           ;	CP = OFF, Program memory code protection is disabled
  1401                           ;	Data Code Protection bit
  1402                           ;	CPD = OFF, Data memory code protection is disabled
  1403                           ;	Brown Out Reset Selection bits
  1404                           ;	BOREN = OFF, BOR disabled
  1405                           ;	Internal External Switchover bit
  1406                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1407                           ;	Fail-Safe Clock Monitor Enabled bit
  1408                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1409                           ;	Low Voltage Programming Enable bit
  1410                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1411                           ;	In-Circuit Debugger Mode bit
  1412                           ;	DEBUG = 0x1, unprogrammed default
  1413  2007                     	org	8199
  1414  2007  20D6               	dw	8406
  1415                           
  1416                           ;Config register CONFIG2 @ 0x2008
  1417                           ;	Brown-out Reset Selection bit
  1418                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1419                           ;	Flash Program Memory Self Write Enable bits
  1420                           ;	WRT = OFF, Write protection off
  1421  2008                     	org	8200
  1422  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      3       3
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_adc_read
    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     666
                                              0 BANK0      3     3      0
                           _adc_read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     666
                           _adc_init
                          _configOsc
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _configOsc                                            2     0      2     208
                                              3 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             3     1      2      98
                                              3 COMMON     3     1      2
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             4     2      2       0
                                              3 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  2     2      0      15
                                              1 COMMON     2     2      0
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_read
   _setup
     _adc_init
     _configOsc
     _spiInit

 _isr (ROOT)
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       D       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      3       3       5        3.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       D      12        0.0%


Microchip Technology PIC Macro Assembler V2.35 build 20211206165544 
Symbol Table                                                                                   Tue Aug 01 18:05:56 2023

            _SSPSTATbits 0094                       l72 00E0                       l57 0096  
                     l75 00E4                       l78 00FA                      l101 0021  
                    l102 002E                      l103 003A                      l104 0049  
                    l105 0056                      l107 0066                      l123 010B  
                    l124 0110                      l901 0074                      l911 0085  
                    l903 0077                      l921 00E8                      l913 0086  
                    l905 0078                      l915 0089                      l907 007B  
                    l861 0016                      l917 008C                      l909 0084  
                    l933 0097                      l919 00E1                      l871 0050  
                    l863 001D                      l935 009C                      l881 00DA  
                    l873 005D                      l865 0028                      l937 00A5  
                    l883 00DB                      l875 0063                      l867 0034  
                    l891 0107                      l939 00AE                      l877 00C0  
                    l869 0043                      l893 010A                      l885 00FC  
                    l879 00CF                      l887 0103                      l895 0067  
                    l889 0105                      l897 0070                      l899 0073  
                    u110 001D                      u111 001C                      u120 0028  
                    u121 0027                      u130 0034                      u131 0033  
                    u140 0043                      u141 0042                      u150 0050  
                    u207 00DD                      u151 004F                      u160 005D  
                    u217 00EC                      u161 005C                      u170 0103  
                    u171 0102                      u180 00E8                      u181 00E7  
                    u197 00B6                      _isr 0111                     ?_isr 0070  
                   i1l46 0120                     _main 0097                     btemp 007E  
                   start 000C                    ??_isr 0071            configOsc@frec 0073  
                  ?_main 0070                    _ANSEL 0188                    i1l133 012C  
                  i1l801 0111                    i1l803 0117                    i1l805 011D  
                  i1l767 0128                    u10_20 0117                    u10_21 0116  
                  _PORTB 0006                    _PORTD 0008                    _TRISB 0086  
                  _TRISD 0088                    _SSPIF 0063                    _setup 0067  
                  pclath 000A          __end_of_spiInit 0111                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 00C0  
                 ??_main 0020                   _ADRESH 001E                   ?_setup 0070  
                 _ANSELH 0189         __end_of_adc_init 00E1         __end_of_adc_read 00FB  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 012D  
              ??_spiInit 0076  __end_of__initialization 0012           __pcstackCOMMON 0070  
          __end_of_setup 0097                  ??_setup 0077               __pmaintext 0097  
             __pintentry 0004                ?_adc_init 0073                ?_adc_read 0073  
                _SSPSTAT 0094        __end_of_configOsc 0067                ?_spiWrite 0070  
              _ANSELbits 0188               ??_adc_init 0075               ??_adc_read 0075  
                __ptext1 0067                  __ptext2 00FB                  __ptext3 0016  
                __ptext4 00C0                  __ptext5 00E1                  __ptext6 0111  
                __ptext7 0127                  _spiInit 00FB     end_of_initialization 0012  
             ??_spiWrite 0070                _TRISAbits 0085              spiWrite@dat 0070  
    start_initialization 000F              __end_of_isr 0127          adc_init@channel 0073  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
              _configOsc 0016                 ?_spiInit 0073     spiInit@sTransmitEdge 0075  
      interrupt_function 0004                 _PIE1bits 008C       spiInit@sDataSample 0073  
               _PIR1bits 000C                _valor_adc 0077               ?_configOsc 0073  
             _ADCON0bits 001F               _ADCON1bits 009F                 _adc_init 00C0  
               _adc_read 00E1                 _temporal 0079                 _spiWrite 0127  
           spiInit@sType 0076              ??_configOsc 0075        spiInit@sClockIdle 0074  
             _INTCONbits 000B                 intlevel1 0000               _OSCCONbits 008F  
